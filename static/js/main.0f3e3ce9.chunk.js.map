{"version":3,"sources":["components/d3Components/forceGraph.module.css","icons/redoIcon.svg","icons/upload-thick.svg","icons/plusSquare.svg","icons/downMenu.svg","icons/addNode.svg","icons/links.svg","icons/modify.svg","icons/removeNode.svg","icons/csvFile.svg","icons/outputFile.svg","components/sidebarMenu.js","components/d3Components/forceGraph.js","components/d3Components/forceGraphGenerator.js","components/d3Components/updateForceGraph.js","data/data.js","components/d3Components/graphGenerator.js","components/downloadFile.js","App.js","components/matrixGenerators.js","reportWebVitals.js","index.js"],"names":["module","exports","SidebarMenu","props","uploadSectionRef","useRef","uploadSectionMenuIconRef","fileSectionRef","fileSectionMenuIconRef","graphSectionRef","graphSectionMenuIconRef","downloadSectionRef","downloadSectionMenuIconRef","removeNodeInput","useState","nodeToRemove","setNodeToRemove","node1Ref","node2Ref","node1","setNode1","node2","setNode2","handleModifyLink","console","log","current","value","className","onClick","reset","src","redo","classList","toggle","ref","downMenu","graphFile","document","getElementById","click","uploadIcon","id","type","onChange","handleFileUpload","addNode","links","placeholder","modify","modifyLink","removeNode","grGraphFile","handleGrFileUpload","arffGraphFile","modified","window","alert","plusSquare","handleArffFileUpload","handleCsvDownload","csvDoc","handleOutFileDownload","outputDoc","ForceGraph","graph","containerRef","simulation","setSimulation","svg","setSvg","node","setNode","link","setLink","label","setLabel","color","firstRender","setFirstRender","drag","d3","on","event","d","active","alphaTarget","restart","fx","x","fy","y","useEffect","destroyFn","all","container","containerRect","getBoundingClientRect","height","width","nodes","force","strength","append","attr","call","transform","selectAll","data","join","Math","sqrt","enter","text","source","target","destroy","stop","runForceGraph","updated","old","Map","map","Object","assign","get","alpha","update","styles","firstMatrix","graphGenerator","matrix","nodesOnGraph","forEach","row","i","includes","push","from","to","j","downloadFile","name","file","extention","element","createElement","setAttribute","encodeURIComponent","newName","substr","length","style","display","body","appendChild","removeChild","App","reader","FileReader","setGraphFile","setGrGraphFile","setArffGraphFile","setGraph","numberOfNodes","setNumberOfNodes","setLinkMatrix","initMatrix","setInitMatrix","csvFile","setCsvFile","finMatrix","setFinMatrix","setDiffMatrix","outputFile","setOutputFile","setModified","diffMat","initialMatrix","finalMatrix","z","out","c","v","differenceMatrix","outFile","ev","readAsText","files","onload","result","linkMatrix","textByLine","split","pairsArray","arrayOfLine","pair","biggest","parseInt","linkInitialMatrix","initialMat","grFile","filter","line","dataObj","nodesD","linksD","linkedNodes","csv","el","finMat","arffFile","lastIndex","nodeOnCluster","cluster","finLinks","pairOne","indexOne","pairTwo","indexTwo","linkObj","updatedNodes","no","updatedLinks","li","currentNodes","findNode1","find","findNode2","linksToCheck","linksSimple","linkExists","nodesToCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,4BAA4B,YAAc,gCAAgC,UAAY,gC,uHCDjP,G,YAAA,IAA0B,sCCA1B,MAA0B,yCCA1B,MAA0B,uCCA1B,MAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,oCCA1B,MAA0B,uC,OCa5BC,EAAc,SAACC,GACxB,IAAMC,EAAmBC,mBACnBC,EAA2BD,mBAC3BE,EAAiBF,mBACjBG,EAAyBH,mBACzBI,EAAkBJ,mBAClBK,EAA0BL,mBAC1BM,EAAqBN,mBACrBO,EAA6BP,mBAC7BQ,EAAkBR,mBATU,EAUMS,mBAAS,GAVf,mBAU3BC,EAV2B,KAUbC,EAVa,KAW5BC,EAAWZ,mBACXa,EAAWb,mBAZiB,EAaRS,mBAAS,GAbD,mBAa3BK,EAb2B,KAapBC,EAboB,OAcRN,mBAAS,GAdD,mBAc3BO,EAd2B,KAcpBC,EAdoB,KAqB5BC,EAAmB,WACrBC,QAAQC,IAAIR,EAASS,QAAQC,MAAQ,IAAMT,EAASQ,QAAQC,OAC5DP,EAASH,EAASS,QAAQC,OAC1BL,EAASJ,EAASQ,QAAQC,QAkD9B,OACI,sBAAKC,UAAU,UAAf,UACI,sBAAMA,UAAU,SAAhB,2BACA,sBAAMA,UAAU,cAAhB,+CACA,sBAAKA,UAAU,QAAQC,QAAS1B,EAAM2B,MAAtC,UACI,qBAAKF,UAAU,YAAYG,IAAKC,IAChC,sBAAMJ,UAAU,YAAhB,8BAEJ,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,gBAAgBC,QArCf,WACRzB,EAAiBsB,QACzBO,UAAUC,OAAO,UACZ5B,EAAyBoB,QACjCO,UAAUC,OAAO,WAiCd,UACI,sBAAMN,UAAU,eAAhB,iCACA,qBAAKO,IAAK7B,EAA0BsB,UAAU,WAAWG,IAAKK,OAElE,qBAAKD,IAAK/B,EAAkBwB,UAAU,cAAtC,SACI,sBAAKA,UAAWzB,EAAMkC,UAAY,iBAAmB,WAAYR,QA7DzD,WACpBS,SAASC,eAAe,cAAcC,SA4D1B,UACI,qBAAKZ,UAAU,aAAaG,IAAKU,IACjC,sBAAMb,UAAU,aAAhB,yBACA,uBACIc,GAAG,aACHC,KAAK,OACLC,SAAUzC,EAAM0C,iBAChBjB,UAAU,mBAItB,sBAAKA,UAAU,gBAAgBC,QA9ChB,WACPpB,EAAgBiB,QACxBO,UAAUC,OAAO,UACZxB,EAAwBgB,QAChCO,UAAUC,OAAO,WA0Cd,UACI,sBAAMN,UAAU,eAAhB,2BACA,qBAAKO,IAAKzB,EAAyBkB,UAAU,WAAWG,IAAKK,OAEjE,sBAAKD,IAAK1B,EAAiBmB,UAAU,cAArC,UACI,sBAAKA,UAAU,UAAUC,QAAS1B,EAAM2C,QAAxC,UACI,qBAAKlB,UAAU,WAAWG,IAAKe,IAC/B,sBAAMlB,UAAU,aAAhB,yBAEJ,sBAAKA,UAAU,aAAf,UACI,gCACI,qBAAKA,UAAU,WAAWG,IAAKgB,IAC/B,sBAAMnB,UAAU,aAAhB,6BAEJ,sBAAMA,UAAU,WAAhB,oBACA,uBAAOO,IAAKlB,EAAUW,UAAU,YAAYoB,YAAY,IAAIJ,SAAUrB,IACtE,qBAAKK,UAAU,aAAaG,IAAKkB,IACjC,sBAAMrB,UAAU,YAAhB,kBACA,uBAAOO,IAAKjB,EAAUU,UAAU,YAAYoB,YAAY,IAAIJ,SAAUrB,IACtE,sBAAMK,UAAU,mBAAmBC,QAAS,kBAAM1B,EAAM+C,WAAW/B,EAAOE,IAA1E,uBAEJ,sBAAKO,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,WAAWG,IAAKoB,IAC/B,sBAAMvB,UAAU,aAAhB,4BAEJ,sBAAMA,UAAU,WAAhB,mBACA,uBAAOO,IAAKtB,EAAiBe,UAAU,YAAYoB,YAAY,IAAIJ,SA9G9D,WACrB5B,EAAgBH,EAAgBa,QAAQC,OACxCH,QAAQC,IAAI,uBAAwBZ,EAAgBa,QAAQC,UA6G5C,sBAAMC,UAAU,mBAAmBC,QAAS,kBAAM1B,EAAMgD,WAAWpC,IAAnE,0BAGR,sBAAKa,UAAU,gBAAgBC,QAtEjB,WACNtB,EAAemB,QACvBO,UAAUC,OAAO,UACZ1B,EAAuBkB,QAC/BO,UAAUC,OAAO,WAkEd,UACI,sBAAMN,UAAU,eAAhB,wCACA,qBAAKO,IAAK3B,EAAwBoB,UAAU,WAAWG,IAAKK,OAEhE,sBAAKD,IAAK5B,EAAgBqB,UAAU,cAApC,UACI,sBAAKA,UAAWzB,EAAMiD,YAAc,iBAAmB,WAAYvB,QAxGzD,WACtBS,SAASC,eAAe,YAAYC,SAuGxB,UACI,qBAAKZ,UAAU,aAAaG,IAAKU,IACjC,sBAAMb,UAAU,aAAhB,qCACA,uBACIc,GAAG,WACHC,KAAK,OACLC,SAAUzC,EAAMkD,mBAChBzB,UAAU,iBAGlB,sBAAKA,UAAWzB,EAAMmD,cAAgB,gBAAkB,UAAWzB,QA9GvD,WACpB1B,EAAMiD,cAAgBjD,EAAMoD,SAC5BjB,SAASC,eAAe,cAAcC,QAC/BrC,EAAMoD,SACbC,OAAOC,MAAM,4EAGbD,OAAOC,MAAM,sEAuGL,UACI,qBAAK7B,UAAU,WAAWG,IAAK2B,IAC/B,sBAAM9B,UAAU,aAAhB,qCACA,uBACIc,GAAG,aACHC,KAAK,OACLC,SAAUzC,EAAMwD,qBAChB/B,UAAU,oBAItB,sBAAKA,UAAU,gBAAgBC,QAzFb,WACVlB,EAAmBe,QAC3BO,UAAUC,OAAO,UACZtB,EAA2Bc,QACnCO,UAAUC,OAAO,WAqFd,UACI,sBAAMN,UAAU,eAAhB,+CACA,qBAAKO,IAAKvB,EAA4BgB,UAAU,WAAWG,IAAKK,OAEpE,sBAAKD,IAAKxB,EAAoBiB,UAAU,cAAxC,UACI,sBAAKA,UAAWzB,EAAMiD,YAAc,iBAAmB,WAAYvB,QAAS1B,EAAMyD,kBAAlF,UACI,qBAAKhC,UAAU,aAAaG,IAAK8B,IACjC,sBAAMjC,UAAU,aAAhB,kCAEJ,sBAAKA,UAAWzB,EAAMmD,cAAgB,gBAAkB,UAAWzB,QAAS1B,EAAM2D,sBAAlF,UACI,qBAAKlC,UAAU,WAAWG,IAAKgC,IAC/B,sBAAMnC,UAAU,aAAhB,+C,kCC9KjB,SAASoC,EAAT,GAAgC,IAAVC,EAAS,EAATA,MACnBC,EAAe7D,iBAAO,MADM,EAEES,qBAFF,mBAE3BqD,EAF2B,KAEfC,EAFe,OAGZtD,qBAHY,mBAG3BuD,EAH2B,KAGtBC,EAHsB,OAIVxD,qBAJU,mBAI3ByD,EAJ2B,KAIrBC,EAJqB,OAKV1D,qBALU,mBAK3B2D,EAL2B,KAKrBC,EALqB,OAMR5D,qBANQ,mBAM3B6D,EAN2B,KAMpBC,EANoB,KAO5BC,EAAQ,WACV,MAAO,WARuB,EAUI/D,oBAAS,GAVb,mBAU3BgE,EAV2B,KAUdC,EAVc,KAY5BC,EAAO,SAACb,GAkBV,OAAOc,MAEFC,GAAG,SAnBY,SAACC,EAAOC,GACnBD,EAAME,QAAQlB,EAAWmB,YAAY,IAAKC,UAC/CH,EAAEI,GAAKJ,EAAEK,EACTL,EAAEM,GAAKN,EAAEO,KAiBRT,GAAG,QAdQ,SAACC,EAAOC,GACpBA,EAAEI,GAAKL,EAAMM,EACbL,EAAEM,GAAKP,EAAMQ,KAaZT,GAAG,OAVU,SAACC,EAAOC,GACjBD,EAAME,QAAQlB,EAAWmB,YAAY,GAC1CF,EAAEI,GAAK,KACPJ,EAAEM,GAAK,SAmCf,OAzBAE,qBAAU,WACN,IAAIC,EAEJ,GADArE,QAAQC,IAAI,QAASwC,GACjBC,EAAaxC,SAAWoD,EAAa,CACrCtD,QAAQC,IAAI,eACZ,IAAMqE,EC7CX,SAAuBC,EAAW9B,EAAOE,EAAYI,EAAME,EAAME,EAAOE,EAAOR,EAAKW,GACvF,IAAMgB,EAAgBD,EAAUE,wBAC1BC,EAASF,EAAcE,OACvBC,EAAQH,EAAcG,MAwE5B,OAtEAhC,EAAac,IACQhB,EAAMmC,OACtBC,MACG,OACApB,IAAahB,EAAMlB,OAAOL,IAAG,SAAC0C,GAAD,OAAOA,EAAE1C,OAEzC2D,MAAM,SAAUpB,MAAmBqB,UAAU,MAC7CD,MAAM,IAAKpB,OACXoB,MAAM,IAAKpB,OAEhBZ,EAAMY,IACMc,GACPQ,OAAO,OACPC,KAAK,KAAM,YACXA,KAAK,UAAW,EAAEL,EAAQ,GAAID,EAAS,EAAGC,EAAOD,IACjDO,KACGxB,MAAUC,GAAG,QAAQ,SAAUC,GAC3Bd,EAAImC,KAAK,YAAarB,EAAMuB,eAIxCjC,EAAOJ,EACFkC,OAAO,KACPC,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBG,UAAU,QACVC,KAAK3C,EAAMlB,OACX8D,KAAK,QACLL,KAAK,gBAAgB,SAACpB,GAAD,OAAO0B,KAAKC,KAAK3B,EAAEzD,UAE7C4C,EAAOF,EACFkC,OAAO,KACPC,KAAK,SAAU,QACfA,KAAK,eAAgB,GACrBG,UAAU,UACVC,KAAK3C,EAAMmC,OACXS,KAAK,UACLL,KAAK,IAAK,IACVA,KAAK,OAAQ3B,GACb4B,KAAKzB,EAAKb,IACVe,GAAG,SAAS,SAACE,GAAD,OAAO5D,QAAQC,IAAI,eAAgB2D,MAEpDT,EAAQN,EAAIkC,OAAO,KACdC,KAAK,QAAS,UACdG,UAAU,QACVC,KAAK3C,EAAMmC,OACXY,QACAT,OAAO,QACPC,KAAK,cAAe,UACpBA,KAAK,oBAAqB,WAC1BS,MAAK,SAAA7B,GAAO,OAAOA,EAAE1C,MACrB+D,KAAKzB,EAAKb,IAEfA,EAAWe,GAAG,QAAQ,WAElBT,EACK+B,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE8B,OAAOzB,KAC3Be,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE8B,OAAOvB,KAC3Ba,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE+B,OAAO1B,KAC3Be,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE+B,OAAOxB,KAGhCpB,EAAKiC,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAEK,KAAGe,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAEO,KAGhDhB,EACK6B,KAAK,KAAK,SAAApB,GAAO,OAAOA,EAAEK,KAC1Be,KAAK,KAAK,SAAApB,GAAO,OAAOA,EAAEO,QAG5B,CACHyB,QAAS,WACLjD,EAAWkD,QAEfjB,MAAO,WACH,OAAO/B,EAAIE,QAEfF,IAAKA,EACLE,KAAMA,EACNE,KAAMA,EACNE,MAAOA,EACPR,WAAYA,GDzCImD,CAAcpD,EAAaxC,QAASuC,EAAOE,EAAYI,EAAME,EAAME,EAAOE,EAAOR,EAAKW,GAClGa,EAAYC,EAAIsB,QAChB9C,EAAOwB,EAAIzB,KACXG,EAAQsB,EAAIvB,MACZG,EAAQoB,EAAIrB,MACZG,EAASkB,EAAInB,OACbP,EAAc0B,EAAI3B,YAClBY,GAAe,OACZ,CACH,IAAMwC,EEzDX,WAAkCpD,EAAYI,EAAME,EAAME,EAAOE,EAAOR,EAAKW,GAAO,IAAlEoB,EAAiE,EAAjEA,MAAOrD,EAA0D,EAA1DA,MAGtByE,EAAM,IAAIC,IAAIlD,EAAKqC,OAAOc,KAAI,SAACtC,GAAD,MAAO,CAACA,EAAE1C,GAAI0C,OA6ClD,OA5CA5D,QAAQC,IAAI,MAAO+F,GACnBhG,QAAQC,IAAI,MAAO4C,GACnB+B,EAAQA,EAAMsB,KAAI,SAACtC,GAAD,OAAOuC,OAAOC,OAAOJ,EAAIK,IAAIzC,EAAE1C,KAAO,GAAI0C,MAC5DrC,EAAQA,EAAM2E,KAAI,SAACtC,GAAD,OAAOuC,OAAOC,OAAO,GAAIxC,MAE3C5D,QAAQC,IAAI,gBAAiB2E,GAC7B5E,QAAQC,IAAI,gBAAiBsB,GAE7BwB,EAAOA,EACFqC,KAAKR,GAAO,SAAChB,GAAD,OAAOA,EAAE1C,MACrBmE,MAAK,SAACG,GAAD,OACFA,EAAMT,OAAO,UAAUC,KAAK,IAAK,IAAIA,KAAK,OAAQ3B,MACpD4B,KAAKzB,EAAKb,IAEhBM,EAAOA,EAAKmC,KAAK7D,GAAO,SAACqC,GAAD,MAAO,CAACA,EAAE8B,OAAQ9B,EAAE+B,WAASN,KAAK,QAE1DlC,EAAQA,EAAMiC,KAAKR,GAAO,SAAChB,GAAD,OAAOA,EAAE1C,MAC9BmE,MAAK,SAACG,GAAD,OACFA,EAAMT,OAAO,QACRC,KAAK,cAAe,UACpBA,KAAK,oBAAqB,WAC1BS,MAAK,SAAA7B,GAAO,OAAOA,EAAE1C,SAC5B+D,KAAKzB,EAAKb,IAEhBA,EAAWiC,MAAMA,GACjBjC,EAAWkC,MAAM,QAAQtD,MAAMA,GAC/BoB,EAAW2D,MAAM,GAAGvC,UAEpBpB,EAAWe,GAAG,QAAQ,WAElBT,EACK+B,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE8B,OAAOzB,KAC3Be,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE8B,OAAOvB,KAC3Ba,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE+B,OAAO1B,KAC3Be,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAE+B,OAAOxB,KAGhCpB,EAAKiC,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAEK,KAAGe,KAAK,MAAM,SAACpB,GAAD,OAAOA,EAAEO,KAGhDhB,EACK6B,KAAK,KAAK,SAAApB,GAAO,OAAOA,EAAEK,KAC1Be,KAAK,KAAK,SAAApB,GAAO,OAAOA,EAAEO,QAE5B,CACHyB,QAAS,WACLjD,EAAWkD,QAEfjB,MAAO,WACH,OAAO/B,EAAIE,QAEfA,KAAMA,EACNE,KAAMA,EACNE,MAAOA,EACPR,WAAYA,GFDQ4D,CAAO9D,EAAOE,EAAYI,EAAME,EAAME,EAAOE,EAAOR,EAAKW,GACzEa,EAAY0B,EAAQH,QACpB9C,EAAOiD,EAAQlD,KACfG,EAAQ+C,EAAQhD,MAChBG,EAAQ6C,EAAQ9C,MAChBG,EAAS2C,EAAQ5C,OACjBP,EAAcmD,EAAQpD,YAE1B,OAAO0B,IACR,CAAC5B,IAEG,qBAAK9B,IAAK+B,EAActC,UAAWoG,IAAOjC,YGpE9C,IAAMkC,EAAc,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,ICA5CC,EAAiB,SAACC,GAC3B,IAAIC,EAAe,GACfnE,EAAQ,GACRmC,EAAQ,GACRrD,EAAQ,GAqBZ,OApBAoF,EAAOE,SAAQ,SAACC,EAAKC,GACbD,EAAIE,SAAS,IACbJ,EAAaK,KAAKF,EAAI,MAI9BH,EAAaC,SAAQ,SAAC9D,GAClB6B,EAAMqC,KAAK,CAAE/F,GAAI6B,OAErBN,EAAMmC,MAAQA,EAEd+B,EAAOE,SAAQ,SAACK,EAAMH,GAClBG,EAAKL,SAAQ,SAACM,EAAIC,GACVL,EAAIK,GAAsB,IAAjBT,EAAOI,GAAGK,IACnB7F,EAAM0F,KAAK,CAAEvB,OAAQqB,EAAI,EAAGpB,OAAQyB,EAAI,UAIpD3E,EAAMlB,MAAQA,EACdvB,QAAQC,IAAI,QAASwC,GACdA,GCzBE4E,EAAe,SAACC,EAAMC,EAAMC,GACrC,IAAIC,EAAU3G,SAAS4G,cAAc,KACrCD,EAAQE,aACJ,OACA,iCAAmCC,mBAAmBL,IAE1D,IAAIM,EAAUP,EAAKQ,OAAO,EAAGR,EAAKS,OAAS,GAAKP,EAChDC,EAAQE,aAAa,WAAYE,GAEjCJ,EAAQO,MAAMC,QAAU,OACxBnH,SAASoH,KAAKC,YAAYV,GAE1BA,EAAQzG,QAERF,SAASoH,KAAKE,YAAYX,ICmMfY,EAvMH,WACV,IAAMC,EAAS,IAAIC,WADH,EAGkBjJ,qBAHlB,mBAGTuB,EAHS,KAGE2H,EAHF,OAkBsBlJ,qBAlBtB,mBAkBTsC,EAlBS,KAkBI6G,EAlBJ,OAkC0BnJ,qBAlC1B,mBAkCTwC,EAlCS,KAkCM4G,EAlCN,OAgEUpJ,mBAASoH,EAAeD,IAhElC,mBAgEThE,EAhES,KAgEFkG,EAhEE,OAiE0BrJ,mBAAS,GAjEnC,mBAiETsJ,EAjES,KAiEMC,EAjEN,OAkEoBvJ,qBAlEpB,mBAkEGwJ,GAlEH,aAmEoBxJ,qBAnEpB,mBAmETyJ,EAnES,KAmEGC,EAnEH,OAoEc1J,qBApEd,mBAoET2J,EApES,KAoEAC,EApEA,OAqEkB5J,qBArElB,mBAqET6J,EArES,KAqEEC,EArEF,OAsEoB9J,qBAtEpB,mBAsEG+J,GAtEH,aAuEoB/J,qBAvEpB,mBAuETgK,EAvES,KAuEGC,EAvEH,OAwEgBjK,qBAxEhB,mBAwETyC,GAxES,KAwECyH,GAxED,KA0EhBpF,qBAAU,WACR,GAAI+E,EAAW,CACb,IAAIM,ECmFsB,SAACC,EAAeC,EAAaf,GAGzD,IAFA,IAAIjC,EAAS,GAEJI,EAAI,EAAGA,EAAI6B,EAAe7B,IAC/BJ,EAAOM,KAAK,IAEhBN,EAAOE,SAAQ,SAACC,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAe7B,IAC/BD,EAAIG,KAAK,MAIjB,IAAK,IAAI2C,EAAI,EAAGA,EAAIhB,EAAegB,IAC/B,IAAK,IAAI3F,EAAI,EAAGA,EAAI2E,EAAe3E,IAC3ByF,EAAcE,GAAG3F,KAAO0F,EAAYC,GAAG3F,KACvC0C,EAAOiD,GAAG3F,GAAK,GAI3BjE,QAAQC,IAAI,oBAAqB0G,GAGjC,IADA,IAAIkD,EAAM,GACDC,EAAI,EAAGA,EAAIlB,EAAekB,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAemB,IAC3BD,EAAIC,GAAsB,IAAjBpD,EAAOmD,GAAGC,KACA,IAAfF,EAAI9B,OACJ8B,GAAG,UAAOC,EAAI,EAAX,YAAgBC,EAAI,GAEvBF,GAAG,YAASC,EAAI,EAAb,YAAkBC,EAAI,IAMzC,MAAO,CACHC,iBAAkBrD,EAClBsD,QAASJ,GDvHGG,CAAiBjB,EAAYI,EAAWP,GACtDS,EAAcI,EAAQO,kBACtBT,EAAcE,EAAQQ,YAEvB,CAACd,IA8FJ,OAJA/E,qBAAU,WACRpE,QAAQC,IAAI,gCAAiCwC,KAC5C,CAACA,IAGF,sBAAKrC,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAACoC,EAAD,CAAYC,MAAOA,MAErB,cAAC,EAAD,CACE5B,UAAWA,EACXe,YAAaA,EACbE,cAAeA,EACfT,iBAnLmB,SAAC6I,GACxB5B,EAAO6B,WAAWD,EAAGvE,OAAOyE,MAAM,GAAI,SACtC9B,EAAO+B,OAAS,SAAC1G,GACf6E,EAAa7E,EAAMgC,OAAO2E,QAC1B,IAAIC,EClBuB,SAAChD,GAC9B,IAAIiD,EAAajD,EAAKkD,MAAM,MACxB7B,EAAgB,EAChB8B,EAAa,GACjBF,EAAW3D,SAAQ,SAACC,GAChB,IAAI6D,EAAc7D,EAAI2D,MAAM,KAC5BC,EAAWzD,KAAK0D,MAGpBD,EAAW7D,SAAQ,SAAC+D,GAChB,IAAIC,EAAU,EACVlL,EAAQmL,SAASF,EAAK,IACtB/K,EAAQiL,SAASF,EAAK,KAEtBC,EADAlL,EAAQE,EACEF,EAEAE,GAEA+I,IACVA,EAAgBiC,MAGxB7K,QAAQC,IAAI,kBAAmB2I,GAG/B,IADA,IAAIjC,EAAS,GACJI,EAAI,EAAGA,EAAI6B,EAAe7B,IAC/BJ,EAAOM,KAAK,IAiBhB,OAfAN,EAAOE,SAAQ,SAACC,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAe7B,IAC/BD,EAAIG,KAAK,MAIjByD,EAAW7D,SAAQ,SAAC+D,GAChB,IAAI1D,EAAO0D,EAAK,GACZzD,EAAKyD,EAAK,GACdjE,EAAOmE,SAAS5D,GAAQ,GAAG4D,SAAS3D,GAAM,GAAK,EAC/CR,EAAOmE,SAAS3D,GAAM,GAAG2D,SAAS5D,GAAQ,GAAK,KAGnDlH,QAAQC,IAAI,eAAgB0G,GAErB,CACH+C,cAAe/C,EACfiC,cAAeA,GD3BAmC,CAAkBpH,EAAMgC,OAAO2E,QAChDzB,EAAiBiC,SAASP,EAAW3B,gBACrCE,EAAcyB,EAAWb,eACzB,IAAIjH,EAAQiE,EAAe6D,EAAWb,eACtCf,EAASlG,IAEC3B,SAASC,eAAe,cAC9BZ,MAAQ,IAyKV0B,mBArKqB,SAACqI,GAC1B5B,EAAO6B,WAAWD,EAAGvE,OAAOyE,MAAM,GAAI,SACtC9B,EAAO+B,OAAS,SAAC1G,GACf8E,EAAe9E,EAAMgC,OAAO2E,QAC5B,IAAIU,ECgBmB,SAACC,GAC1B,IAAIT,EAAaS,EAAOR,MAAM,MAC9BD,EAAaA,EAAWU,QAAO,SAACC,GAAD,MAAmB,KAATA,KAEzC,IAAIC,EAAU,CACVC,OAAQ,EACRC,OAAQ,EACRC,YAAa,IAGjBf,EAAW3D,SAAQ,SAACC,GAChB,IAAI6D,EAAc7D,EAAI2D,MAAM,KACL,MAAnBE,EAAY,KACZS,EAAQC,OAASV,EAAY,GAC7BS,EAAQE,OAASX,EAAY,OAIrC3K,QAAQC,IAAImL,EAAQC,OAAQD,EAAQE,QAGpC,IAFA,IAAI3E,EAAS,GAEJI,EAAI,EAAGA,EAAIqE,EAAQC,OAAQtE,IAChCJ,EAAOM,KAAK,IAEhBN,EAAOE,SAAQ,SAACC,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIqE,EAAQC,OAAQtE,IAChCD,EAAIG,KAAK,MAIjBuD,EAAW3D,SAAQ,SAACsE,GAChB,IAAIR,EAAcQ,EAAKV,MAAM,KAC7B,GAAuB,MAAnBE,EAAY,GAAY,CACxB,IAAIzD,EAAOyD,EAAY,GACnBxD,EAAKwD,EAAY,GACrBhE,EAAOmE,SAAS5D,GAAQ,GAAG4D,SAAS3D,GAAM,GAAK,EAC/CR,EAAOmE,SAAS3D,GAAM,GAAG2D,SAAS5D,GAAQ,GAAK,MAIvDsD,EAAW3D,SAAQ,SAACsE,GAChB,IAAIR,EAAcQ,EAAKV,MAAM,KAC7B,GAAuB,MAAnBE,EAAY,GAAY,CACxB,IAAIzD,EAAOyD,EAAY,GACnBxD,EAAKwD,EAAY,GACrBS,EAAQG,YAAYtE,KAAKC,GACzBkE,EAAQG,YAAYtE,KAAKE,OAKjC,IADA,IAAIqE,EAAM,OACDzE,EAAI,EAAGA,EAAIqE,EAAQC,OAAQtE,IAChCyE,GAAG,YAASzE,EAAI,GAUpB,OAPAJ,EAAOE,SAAQ,SAACC,EAAKC,GACjByE,GAAG,aAAUzE,EAAI,GACjBD,EAAID,SAAQ,SAAC4E,GACTD,GAAG,YAASC,SAIb,CACH/B,cAAe/C,EACfiC,cAAewC,EAAQC,OACvBG,IAAKA,GDjFU9B,CAAc/F,EAAMgC,OAAO2E,QAC5CzB,EAAiBiC,SAASE,EAAWpC,gBACrCI,EAAcgC,EAAWtB,eACzB,IAAIjH,EAAQiE,EAAesE,EAAWtB,eACtCf,EAASlG,GACTyG,EAAW8B,EAAWQ,MAEZ1K,SAASC,eAAe,YAC9BZ,MAAQ,IA0JVgC,qBAtJuB,SAAC+H,GAC5B5B,EAAO6B,WAAWD,EAAGvE,OAAOyE,MAAM,GAAI,SACtC9B,EAAO+B,OAAS,SAAC1G,GACf+E,EAAiB/E,EAAMgC,OAAO2E,QAC9B,IAAIoB,ECqEiB,SAACC,EAAU/C,GAClC,IAAI4B,EAAamB,EAASlB,MAAM,MAGhCD,GADAA,GADAA,EAAaA,EAAWU,QAAO,SAACC,GAAD,MAAmB,KAATA,MACjBD,QAAO,SAACC,GAAD,MAAgC,MAAtBA,EAAKV,MAAM,IAAI,OAChCvE,KAAI,SAACiF,GAAD,OAAUA,EAAKV,MAAM,QAEjD,IAAImB,EAAYd,SAASlC,GAAiB,EAEtC8B,EAAa,GACjBF,EAAW3D,SAAQ,SAACC,GAChB,IAAI+E,EAAgB,CAChB9I,KAAM+D,EAAI,GACVgF,QAAShF,EAAI8E,IAGjBlB,EAAWzD,KAAK4E,MAGpB,IAAIE,EAAW,GACfrB,EAAW7D,SAAQ,SAACmF,EAASC,GACzBvB,EAAW7D,SAAQ,SAACqF,EAASC,GACrBF,EAAWE,GAAYH,EAAQF,UAAYI,EAAQJ,SACnDC,EAAS9E,KAAK,CACVhD,EAAG+H,EAAQjJ,KACXoB,EAAG+H,EAAQnJ,aAQ3B,IAFA,IAAI4D,EAAS,GAEJI,EAAI,EAAGA,EAAI6B,EAAe7B,IAC/BJ,EAAOM,KAAK,IAahB,OAXAN,EAAOE,SAAQ,SAACC,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAe7B,IAC/BD,EAAIG,KAAK,MAIjB8E,EAASlF,SAAQ,SAACuF,GACdzF,EAAOmE,SAASsB,EAAQnI,GAAK,GAAG6G,SAASsB,EAAQjI,GAAK,GAAK,EAC3DwC,EAAOmE,SAASsB,EAAQjI,GAAK,GAAG2G,SAASsB,EAAQnI,GAAK,GAAK,KAGxD,CACH0F,YAAahD,GDpHFgD,CAAYhG,EAAMgC,OAAO2E,OAAQ1B,GAC9CQ,EAAasC,EAAO/B,aACpB,IAAIlH,EAAQiE,EAAegF,EAAO/B,aAClChB,EAASlG,IAEC3B,SAASC,eAAe,cAC9BZ,MAAQ,IA6IViC,kBA1IoB,WACpB6G,EACF5B,EAAa,QAAS4B,EAAS,aAE/BjH,OAAOC,MAAM,sEAuIXK,sBAnIwB,WACxBgH,EACFjC,EAAa,QAASiC,EAAY,oBAElCtH,OAAOC,MAAM,kFAgIXF,SAAUA,GACVyH,YAAa,kBAAMA,IAAY,IAC/BlI,QAAS,kBAjGC,WACdkI,IAAY,GACZ,IAAI/H,EAAS0E,OAAOC,OAAO,GAAI3D,GAC/BhB,EAAOmD,MAAMqC,KAAK,CAAE/F,GAAI0H,EAAgB,IACxCC,EAAiBD,EAAgB,GACjCD,EAASlH,GA4FUH,IACfK,WA1Fa,SAACoB,GAClB,GAAIA,EAAO6F,EACT5G,OAAOC,MAAM,0BACR,CACL,IAAIR,EAAS0E,OAAOC,OAAO,GAAI3D,GAC/B+G,IAAY,GACZ,IACI6C,EADY,YAAO5J,EAAMmC,OACGsG,QAAO,SAACoB,GAAD,OACrCA,EAAGpL,IAAM4J,SAAS/H,MAEpB,GAAI+H,SAAS/H,KAAU6F,EAErBC,EAAiBiC,SADPlC,GACuB,GAEnC5I,QAAQC,IAAI2I,GACZ,IACI2D,EADY,YAAO9J,EAAMlB,OACG2J,QAAO,SAACsB,GAAD,OACpCA,EAAG9G,OAAOxE,GAAKsL,EAAG9G,OAAOxE,GAAKsL,EAAG9G,SAAWoF,SAAS/H,KAAUyJ,EAAG7G,OAAOzE,GAAKsL,EAAG7G,OAAOzE,GAAKsL,EAAG7G,SAAWmF,SAAS/H,MAEvHtB,EAAOmD,MAAQyH,EACf5K,EAAOF,MAAQgL,EACf5D,EAASlH,KAsEPC,WAlEa,SAAC/B,EAAOE,GACzBG,QAAQC,IAAI,8BAA+BN,EAAQ,IAAME,GACzD,IAAI4M,EAAY,YAAOhK,EAAMmC,OACzB8H,EAAYD,EAAaE,MAAK,SAACL,GAAD,OAAQA,EAAGpL,KAAO4J,SAASnL,MACzDiN,EAAYH,EAAaE,MAAK,SAACL,GAAD,OAAQA,EAAGpL,KAAO4J,SAASjL,MAC7D,GAAIF,EAAQiJ,GAAiB/I,EAAQ+I,EACnC5G,OAAOC,MAAM,mCACR,GACHyK,GAAaE,EAGV,CACL,IAAInL,EAAS0E,OAAOC,OAAO,GAAI3D,GAC/B+G,IAAY,GACZ,IAAIqD,EAAY,YAAOpK,EAAMlB,OACzBuL,EAAc,GAClBD,EAAahG,SAAQ,SAAC2F,GACpBM,EAAY7F,KAAK,CAAEvB,OAAQ8G,EAAG9G,OAAOxE,GAAKsL,EAAG9G,OAAOxE,GAAKsL,EAAG9G,OAAQC,OAAQ6G,EAAG7G,OAAOzE,GAAKsL,EAAG7G,OAAOzE,GAAKsL,EAAG7G,YAE/G,IAAIoH,EAAaD,EAAYH,MAAK,SAACH,GAAD,OAC/BA,EAAG9G,SAAWoF,SAASnL,IAAU6M,EAAG7G,SAAWmF,SAASjL,IACxD2M,EAAG9G,SAAWoF,SAASjL,IAAU2M,EAAG7G,SAAWmF,SAASnL,MAEvD4M,EAAY,UAAOO,GACjBC,EACJR,EAAeO,EAAY5B,QAAO,SAACsB,GAAD,QAC/BA,EAAG9G,SAAWoF,SAASnL,IAAU6M,EAAG7G,SAAWmF,SAASjL,IACxD2M,EAAG9G,SAAWoF,SAASjL,IAAU2M,EAAG7G,SAAWmF,SAASnL,OAG3D4M,EAAatF,KAAK,CAAEvB,OAAQoF,SAASnL,GAAQgG,OAAQmF,SAASjL,KAEhE,IAAImN,EAAY,YAAOvK,EAAMmC,OACzByH,EAAe,GACnBW,EAAanG,SAAQ,SAACyF,GACpBD,EAAapF,KAAK,CAAE/F,GAAIoL,EAAGpL,QAE7BO,EAAOmD,MAAQyH,EACf5K,EAAOF,MAAQgL,EACfvM,QAAQC,IAAI,iBAAkBwB,GAC9BkH,EAASlH,QA9BTO,OAAOC,MAAM,uEAyDX3B,MAAO,kBA9GXkI,EAAa,MACbC,EAAe,MACfC,EAAiB,MACjBQ,EAAW,MACXK,EAAc,MACdZ,EAASjC,EAAeD,IACxB+C,IAAY,QACZX,EAAiBpC,EAAYsB,eExFlBkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9M,SAASC,eAAe,SAM1BkM,M","file":"static/js/main.0f3e3ce9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forceGraph_container__1gzsd\",\"male\":\"forceGraph_male__3ebJ9\",\"female\":\"forceGraph_female__2zQIC\",\"node\":\"forceGraph_node__1xPTl\",\"tooltip\":\"forceGraph_tooltip__bZJe3\",\"contextMenu\":\"forceGraph_contextMenu__17mUO\",\"menuEntry\":\"forceGraph_menuEntry__3hChz\"};","export default __webpack_public_path__ + \"static/media/redoIcon.ba597351.svg\";","export default __webpack_public_path__ + \"static/media/upload-thick.2b0d678b.svg\";","export default __webpack_public_path__ + \"static/media/plusSquare.4903a1f7.svg\";","export default __webpack_public_path__ + \"static/media/downMenu.a7a8095f.svg\";","export default __webpack_public_path__ + \"static/media/addNode.32ab0af6.svg\";","export default __webpack_public_path__ + \"static/media/links.d361ac9c.svg\";","export default __webpack_public_path__ + \"static/media/modify.c1b1d5f5.svg\";","export default __webpack_public_path__ + \"static/media/removeNode.6f2e8054.svg\";","export default __webpack_public_path__ + \"static/media/csvFile.6ebd3c15.svg\";","export default __webpack_public_path__ + \"static/media/outputFile.81bbffdd.svg\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport '../App.css'\r\nimport redo from '../icons/redoIcon.svg'\r\nimport uploadIcon from '../icons/upload-thick.svg'\r\nimport plusSquare from '../icons/plusSquare.svg'\r\nimport downMenu from '../icons/downMenu.svg'\r\nimport addNode from '../icons/addNode.svg'\r\nimport links from '../icons/links.svg'\r\nimport modify from '../icons/modify.svg'\r\nimport removeNode from '../icons/removeNode.svg'\r\nimport csvDoc from '../icons/csvFile.svg'\r\nimport outputDoc from '../icons/outputFile.svg'\r\n\r\nexport const SidebarMenu = (props) => {\r\n    const uploadSectionRef = useRef()\r\n    const uploadSectionMenuIconRef = useRef()\r\n    const fileSectionRef = useRef()\r\n    const fileSectionMenuIconRef = useRef()\r\n    const graphSectionRef = useRef()\r\n    const graphSectionMenuIconRef = useRef()\r\n    const downloadSectionRef = useRef()\r\n    const downloadSectionMenuIconRef = useRef()\r\n    const removeNodeInput = useRef()\r\n    const [nodeToRemove, setNodeToRemove] = useState(1)\r\n    const node1Ref = useRef()\r\n    const node2Ref = useRef()\r\n    const [node1, setNode1] = useState(2)\r\n    const [node2, setNode2] = useState(3)\r\n\r\n    const handleRemoveNode = () => {\r\n        setNodeToRemove(removeNodeInput.current.value)\r\n        console.log(\"Node to remove value\", removeNodeInput.current.value);\r\n    }\r\n\r\n    const handleModifyLink = () => {\r\n        console.log(node1Ref.current.value + \" \" + node2Ref.current.value);\r\n        setNode1(node1Ref.current.value)\r\n        setNode2(node2Ref.current.value)\r\n    }\r\n\r\n    const uploadGraphFile = () => {\r\n        document.getElementById(\"fileUpload\").click()\r\n    }\r\n\r\n    const uploadGrGraphFile = () => {\r\n        document.getElementById(\"grUpload\").click()\r\n    }\r\n\r\n    const uploadArffGraphFile = () => {\r\n        if (props.grGraphFile && !props.modified) {\r\n            document.getElementById(\"arffUpload\").click()\r\n        } else if (props.modified) {\r\n            window.alert('Can not upload an arff file because the graph has been manually modified')\r\n        }\r\n        else {\r\n            window.alert('No .gr graph file found. Please upload a graph before proceeding.')\r\n        }\r\n    }\r\n\r\n    const toggleUploadSection = () => {\r\n        const section = uploadSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = uploadSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    const toggleGraphSection = () => {\r\n        const section = graphSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = graphSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    const toggleFileSection = () => {\r\n        const section = fileSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = fileSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    const toggleDownloadSection = () => {\r\n        const section = downloadSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = downloadSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    return (\r\n        <div className=\"options\">\r\n            <span className=\"header\">Graph Editing</span>\r\n            <span className=\"description\">Add a graph to edit and visualize</span>\r\n            <div className=\"reset\" onClick={props.reset}>\r\n                <img className=\"resetIcon\" src={redo} />\r\n                <span className=\"resetText\">Reset options</span>\r\n            </div>\r\n            <div className=\"sections\">\r\n                <div className=\"sectionToggle\" onClick={toggleUploadSection}>\r\n                    <span className=\"sectionTitle\">Upload a graph file</span>\r\n                    <img ref={uploadSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n                </div>\r\n                <div ref={uploadSectionRef} className=\"fileSection\">\r\n                    <div className={props.graphFile ? 'uploadGr green' : 'uploadGr'} onClick={uploadGraphFile}>\r\n                        <img className=\"uploadIcon\" src={uploadIcon} />\r\n                        <span className=\"uploadspan\">Upload file</span>\r\n                        <input\r\n                            id=\"fileUpload\"\r\n                            type=\"file\"\r\n                            onChange={props.handleFileUpload}\r\n                            className=\"noDisplay\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"sectionToggle\" onClick={toggleGraphSection}>\r\n                    <span className=\"sectionTitle\">Graph options</span>\r\n                    <img ref={graphSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n                </div>\r\n                <div ref={graphSectionRef} className=\"fileSection\">\r\n                    <div className=\"addArff\" onClick={props.addNode}>\r\n                        <img className=\"plusIcon\" src={addNode} />\r\n                        <span className=\"uploadspan\">Add node</span>\r\n                    </div>\r\n                    <div className=\"modifyLink\">\r\n                        <div>\r\n                            <img className=\"plusIcon\" src={links} />\r\n                            <span className=\"uploadspan\">Modify links</span>\r\n                        </div>\r\n                        <span className=\"nodespan\">Start:</span>\r\n                        <input ref={node1Ref} className=\"nodeInput\" placeholder=\"1\" onChange={handleModifyLink} />\r\n                        <img className=\"modifyIcon\" src={modify} />\r\n                        <span className=\"nodespan2\">End:</span>\r\n                        <input ref={node2Ref} className=\"nodeInput\" placeholder=\"2\" onChange={handleModifyLink} />\r\n                        <span className=\"modifyLinkButton\" onClick={() => props.modifyLink(node1, node2)}>Modify</span>\r\n                    </div>\r\n                    <div className=\"modifyLink\">\r\n                        <div className=\"removeNodeTitle\">\r\n                            <img className=\"plusIcon\" src={removeNode} />\r\n                            <span className=\"uploadspan\">Remove node</span>\r\n                        </div>\r\n                        <span className=\"nodespan\">Node:</span>\r\n                        <input ref={removeNodeInput} className=\"nodeInput\" placeholder=\"1\" onChange={handleRemoveNode} />\r\n                        <span className=\"removeNodeButton\" onClick={() => props.removeNode(nodeToRemove)}>Remove</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sectionToggle\" onClick={toggleFileSection}>\r\n                    <span className=\"sectionTitle\">Pace and Weka file options</span>\r\n                    <img ref={fileSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n                </div>\r\n                <div ref={fileSectionRef} className=\"fileSection\">\r\n                    <div className={props.grGraphFile ? 'uploadGr green' : 'uploadGr'} onClick={uploadGrGraphFile}>\r\n                        <img className=\"uploadIcon\" src={uploadIcon} />\r\n                        <span className=\"uploadspan\">Upload a .gr graph file</span>\r\n                        <input\r\n                            id=\"grUpload\"\r\n                            type=\"file\"\r\n                            onChange={props.handleGrFileUpload}\r\n                            className=\"noDisplay\"\r\n                        />\r\n                    </div>\r\n                    <div className={props.arffGraphFile ? 'addArff green' : 'addArff'} onClick={uploadArffGraphFile}>\r\n                        <img className=\"plusIcon\" src={plusSquare} />\r\n                        <span className=\"uploadspan\">Add .arff file to graph</span>\r\n                        <input\r\n                            id=\"arffUpload\"\r\n                            type=\"file\"\r\n                            onChange={props.handleArffFileUpload}\r\n                            className=\"noDisplay\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"sectionToggle\" onClick={toggleDownloadSection}>\r\n                    <span className=\"sectionTitle\">Pace and Weka format file outputs</span>\r\n                    <img ref={downloadSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n                </div>\r\n                <div ref={downloadSectionRef} className=\"fileSection\">\r\n                    <div className={props.grGraphFile ? 'uploadGr green' : 'uploadGr'} onClick={props.handleCsvDownload}>\r\n                        <img className=\"uploadIcon\" src={csvDoc} />\r\n                        <span className=\"uploadspan\">Download CSV file</span>\r\n                    </div>\r\n                    <div className={props.arffGraphFile ? 'addArff green' : 'addArff'} onClick={props.handleOutFileDownload}>\r\n                        <img className=\"plusIcon\" src={outputDoc} />\r\n                        <span className=\"uploadspan\">Download Output file</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { runForceGraph } from \"./forceGraphGenerator\";\r\nimport { update } from \"./updateForceGraph\"\r\nimport styles from \"./forceGraph.module.css\";\r\n\r\nexport function ForceGraph({ graph }) {\r\n    const containerRef = useRef(null)\r\n    const [simulation, setSimulation] = useState()\r\n    const [svg, setSvg] = useState()\r\n    const [node, setNode] = useState()\r\n    const [link, setLink] = useState()\r\n    const [label, setLabel] = useState()\r\n    const color = () => {\r\n        return \"#9D00A0\"\r\n    }\r\n    const [firstRender, setFirstRender] = useState(true)\r\n\r\n    const drag = (simulation) => {\r\n        const dragstarted = (event, d) => {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            d.fx = d.x;\r\n            d.fy = d.y;\r\n        };\r\n\r\n        const dragged = (event, d) => {\r\n            d.fx = event.x;\r\n            d.fy = event.y;\r\n        };\r\n\r\n        const dragended = (event, d) => {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            d.fx = null;\r\n            d.fy = null;\r\n        };\r\n\r\n        return d3\r\n            .drag()\r\n            .on(\"start\", dragstarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragended);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let destroyFn;\r\n        console.log('Grafi', graph);\r\n        if (containerRef.current && firstRender) {\r\n            console.log('From inside');\r\n            const all = runForceGraph(containerRef.current, graph, simulation, node, link, label, color, svg, drag);\r\n            destroyFn = all.destroy;\r\n            setSvg(all.svg)\r\n            setNode(all.node)\r\n            setLink(all.link)\r\n            setLabel(all.label)\r\n            setSimulation(all.simulation)\r\n            setFirstRender(false)\r\n        } else {\r\n            const updated = update(graph, simulation, node, link, label, color, svg, drag)\r\n            destroyFn = updated.destroy;\r\n            setSvg(updated.svg)\r\n            setNode(updated.node)\r\n            setLink(updated.link)\r\n            setLabel(updated.label)\r\n            setSimulation(updated.simulation)\r\n        }\r\n        return destroyFn;\r\n    }, [graph]);\r\n\r\n    return <div ref={containerRef} className={styles.container} />;\r\n}","import * as d3 from \"d3\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nexport function runForceGraph(container, graph, simulation, node, link, label, color, svg, drag) {\r\n    const containerRect = container.getBoundingClientRect();\r\n    const height = containerRect.height;\r\n    const width = containerRect.width;\r\n\r\n    simulation = d3\r\n        .forceSimulation(graph.nodes)\r\n        .force(\r\n            \"link\",\r\n            d3.forceLink(graph.links).id((d) => d.id)\r\n        )\r\n        .force(\"charge\", d3.forceManyBody().strength(-150))\r\n        .force(\"x\", d3.forceX())\r\n        .force(\"y\", d3.forceY());\r\n\r\n    svg = d3\r\n        .select(container)\r\n        .append(\"svg\")\r\n        .attr(\"id\", \"graphSvg\")\r\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n        .call(\r\n            d3.zoom().on(\"zoom\", function (event) {\r\n                svg.attr(\"transform\", event.transform);\r\n            })\r\n        );\r\n\r\n    link = svg\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#999\")\r\n        .attr(\"stroke-opacity\", 0.6)\r\n        .selectAll(\"line\")\r\n        .data(graph.links)\r\n        .join(\"line\")\r\n        .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\r\n\r\n    node = svg\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#fff\")\r\n        .attr(\"stroke-width\", 2)\r\n        .selectAll(\"circle\")\r\n        .data(graph.nodes)\r\n        .join(\"circle\")\r\n        .attr(\"r\", 12)\r\n        .attr(\"fill\", color)\r\n        .call(drag(simulation))\r\n        .on(\"click\", (d) => console.log(\"Node clicked\", d));\r\n\r\n    label = svg.append(\"g\")\r\n        .attr(\"class\", \"labels\")\r\n        .selectAll(\"text\")\r\n        .data(graph.nodes)\r\n        .enter()\r\n        .append(\"text\")\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dominant-baseline', 'central')\r\n        .text(d => { return d.id; })\r\n        .call(drag(simulation));\r\n\r\n    simulation.on(\"tick\", () => {\r\n        //update link positions\r\n        link\r\n            .attr(\"x1\", (d) => d.source.x)\r\n            .attr(\"y1\", (d) => d.source.y)\r\n            .attr(\"x2\", (d) => d.target.x)\r\n            .attr(\"y2\", (d) => d.target.y);\r\n\r\n        // update node positions\r\n        node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n\r\n        // update label positions\r\n        label\r\n            .attr(\"x\", d => { return d.x; })\r\n            .attr(\"y\", d => { return d.y; })\r\n    });\r\n\r\n    return {\r\n        destroy: () => {\r\n            simulation.stop();\r\n        },\r\n        nodes: () => {\r\n            return svg.node();\r\n        },\r\n        svg: svg,\r\n        node: node,\r\n        link: link,\r\n        label: label,\r\n        simulation: simulation\r\n    };\r\n}\r\n","export function update({ nodes, links }, simulation, node, link, label, color, svg, drag) {\r\n    // Make a shallow copy to protect against mutation, while\r\n    // recycling old nodes to preserve position and velocity.\r\n    const old = new Map(node.data().map((d) => [d.id, d]));\r\n    console.log('old', old);\r\n    console.log('svg', svg);\r\n    nodes = nodes.map((d) => Object.assign(old.get(d.id) || {}, d));\r\n    links = links.map((d) => Object.assign({}, d));\r\n\r\n    console.log('updated nodes', nodes);\r\n    console.log('updated links', links)\r\n\r\n    node = node\r\n        .data(nodes, (d) => d.id)\r\n        .join((enter) =>\r\n            enter.append(\"circle\").attr(\"r\", 12).attr(\"fill\", color)\r\n        ).call(drag(simulation))\r\n\r\n    link = link.data(links, (d) => [d.source, d.target]).join(\"line\");\r\n\r\n    label = label.data(nodes, (d) => d.id)\r\n        .join((enter) =>\r\n            enter.append(\"text\")\r\n                .attr('text-anchor', 'middle')\r\n                .attr('dominant-baseline', 'central')\r\n                .text(d => { return d.id; }),\r\n        ).call(drag(simulation))\r\n\r\n    simulation.nodes(nodes);\r\n    simulation.force(\"link\").links(links);\r\n    simulation.alpha(1).restart();\r\n\r\n    simulation.on(\"tick\", () => {\r\n        //update link positions\r\n        link\r\n            .attr(\"x1\", (d) => d.source.x)\r\n            .attr(\"y1\", (d) => d.source.y)\r\n            .attr(\"x2\", (d) => d.target.x)\r\n            .attr(\"y2\", (d) => d.target.y);\r\n\r\n        // update node positions\r\n        node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n\r\n        // update label positions\r\n        label\r\n            .attr(\"x\", d => { return d.x; })\r\n            .attr(\"y\", d => { return d.y; })\r\n    });\r\n    return {\r\n        destroy: () => {\r\n            simulation.stop();\r\n        },\r\n        nodes: () => {\r\n            return svg.node();\r\n        },\r\n        node: node,\r\n        link: link,\r\n        label: label,\r\n        simulation: simulation\r\n    };\r\n}","export const firstMatrix = [[0, 1, 1], [1, 0, 0], [1, 0, 0]]","export const graphGenerator = (matrix) => {\r\n    let nodesOnGraph = []\r\n    let graph = {}\r\n    let nodes = []\r\n    let links = []\r\n    matrix.forEach((row, i) => {\r\n        if (row.includes(1)) {\r\n            nodesOnGraph.push(i + 1)\r\n        }\r\n    });\r\n\r\n    nodesOnGraph.forEach((node) => {\r\n        nodes.push({ id: node })\r\n    })\r\n    graph.nodes = nodes\r\n\r\n    matrix.forEach((from, i) => {\r\n        from.forEach((to, j) => {\r\n            if (i < j && matrix[i][j] === 1) {\r\n                links.push({ source: i + 1, target: j + 1 })\r\n            }\r\n        })\r\n    })\r\n    graph.links = links\r\n    console.log(\"Graph\", graph);\r\n    return graph\r\n}\r\n\r\n","export const downloadFile = (name, file, extention) => {\r\n    var element = document.createElement(\"a\");\r\n    element.setAttribute(\r\n        \"href\",\r\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(file)\r\n    );\r\n    var newName = name.substr(0, name.length - 3) + extention;\r\n    element.setAttribute(\"download\", newName);\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\nimport { SidebarMenu } from './components/sidebarMenu'\r\nimport { ForceGraph } from './components/d3Components/forceGraph'\r\nimport { firstMatrix } from \"./data/data\";\r\nimport { linkInitialMatrix, initialMatrix, finalMatrix, differenceMatrix } from './components/matrixGenerators'\r\nimport { graphGenerator } from './components/d3Components/graphGenerator'\r\nimport { downloadFile } from './components/downloadFile'\r\n\r\nconst App = () => {\r\n  const reader = new FileReader();\r\n\r\n  const [graphFile, setGraphFile] = useState()\r\n  const handleFileUpload = (ev) => {\r\n    reader.readAsText(ev.target.files[0], \"utf-8\");\r\n    reader.onload = (event) => {\r\n      setGraphFile(event.target.result);\r\n      let linkMatrix = linkInitialMatrix(event.target.result)\r\n      setNumberOfNodes(parseInt(linkMatrix.numberOfNodes))\r\n      setLinkMatrix(linkMatrix.initialMatrix)\r\n      let graph = graphGenerator(linkMatrix.initialMatrix)\r\n      setGraph(graph)\r\n    };\r\n    let input = document.getElementById('fileUpload')\r\n    input.value = ''\r\n  };\r\n\r\n  const [grGraphFile, setGrGraphFile] = useState()\r\n  const handleGrFileUpload = (ev) => {\r\n    reader.readAsText(ev.target.files[0], \"utf-8\");\r\n    reader.onload = (event) => {\r\n      setGrGraphFile(event.target.result);\r\n      let initialMat = initialMatrix(event.target.result)\r\n      setNumberOfNodes(parseInt(initialMat.numberOfNodes))\r\n      setInitMatrix(initialMat.initialMatrix)\r\n      let graph = graphGenerator(initialMat.initialMatrix)\r\n      setGraph(graph)\r\n      setCsvFile(initialMat.csv)\r\n    };\r\n    let input = document.getElementById('grUpload')\r\n    input.value = ''\r\n  };\r\n\r\n  const [arffGraphFile, setArffGraphFile] = useState()\r\n  const handleArffFileUpload = (ev) => {\r\n    reader.readAsText(ev.target.files[0], \"utf-8\");\r\n    reader.onload = (event) => {\r\n      setArffGraphFile(event.target.result);\r\n      let finMat = finalMatrix(event.target.result, numberOfNodes)\r\n      setFinMatrix(finMat.finalMatrix)\r\n      let graph = graphGenerator(finMat.finalMatrix)\r\n      setGraph(graph)\r\n    };\r\n    let input = document.getElementById('arffUpload')\r\n    input.value = ''\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    if (csvFile) {\r\n      downloadFile(\"Graph\", csvFile, \"toCSV.csv\");\r\n    } else {\r\n      window.alert('No .gr graph file found. Please upload a graph before proceeding.')\r\n    }\r\n  };\r\n\r\n  const handleOutFileDownload = () => {\r\n    if (outputFile) {\r\n      downloadFile(\"Graph\", outputFile, \"OutputFormat.txt\");\r\n    } else {\r\n      window.alert('Missing .gr or .arff graph file. Please upload graph files before proceeding.')\r\n    }\r\n  };\r\n\r\n  const [graph, setGraph] = useState(graphGenerator(firstMatrix))\r\n  const [numberOfNodes, setNumberOfNodes] = useState(3)\r\n  const [linkMatrix, setLinkMatrix] = useState()\r\n  const [initMatrix, setInitMatrix] = useState()\r\n  const [csvFile, setCsvFile] = useState()\r\n  const [finMatrix, setFinMatrix] = useState()\r\n  const [diffMatrix, setDiffMatrix] = useState()\r\n  const [outputFile, setOutputFile] = useState()\r\n  const [modified, setModified] = useState()\r\n\r\n  useEffect(() => {\r\n    if (finMatrix) {\r\n      let diffMat = differenceMatrix(initMatrix, finMatrix, numberOfNodes)\r\n      setDiffMatrix(diffMat.differenceMatrix)\r\n      setOutputFile(diffMat.outFile)\r\n    }\r\n  }, [finMatrix])\r\n\r\n  const reset = () => {\r\n    setGraphFile(null)\r\n    setGrGraphFile(null)\r\n    setArffGraphFile(null)\r\n    setCsvFile(null)\r\n    setOutputFile(null)\r\n    setGraph(graphGenerator(firstMatrix))\r\n    setModified(false)\r\n    setNumberOfNodes(firstMatrix.length)\r\n  }\r\n\r\n  const addNode = () => {\r\n    setModified(true)\r\n    let modify = Object.assign({}, graph)\r\n    modify.nodes.push({ id: numberOfNodes + 1 })\r\n    setNumberOfNodes(numberOfNodes + 1)\r\n    setGraph(modify)\r\n  }\r\n\r\n  const removeNode = (node) => {\r\n    if (node > numberOfNodes) {\r\n      window.alert(\"Node doesn't exist\")\r\n    } else {\r\n      let modify = Object.assign({}, graph)\r\n      setModified(true)\r\n      let nodesToCheck = [...graph.nodes]\r\n      let updatedNodes = nodesToCheck.filter((no) => (\r\n        no.id != parseInt(node)\r\n      ))\r\n      if (parseInt(node) === numberOfNodes) {\r\n        var num = numberOfNodes\r\n        setNumberOfNodes(parseInt(num) - 1)\r\n      }\r\n      console.log(numberOfNodes);\r\n      let linksToCheck = [...graph.links]\r\n      let updatedLinks = linksToCheck.filter((li) => (\r\n        (li.source.id ? li.source.id : li.source) != parseInt(node) && (li.target.id ? li.target.id : li.target) != parseInt(node)\r\n      ))\r\n      modify.nodes = updatedNodes\r\n      modify.links = updatedLinks\r\n      setGraph(modify)\r\n    }\r\n  }\r\n\r\n  const modifyLink = (node1, node2) => {\r\n    console.log(\"Modified link between nodes\", node1 + \" \" + node2);\r\n    let currentNodes = [...graph.nodes]\r\n    let findNode1 = currentNodes.find((no) => no.id === parseInt(node1))\r\n    let findNode2 = currentNodes.find((no) => no.id === parseInt(node2))\r\n    if (node1 > numberOfNodes || node2 > numberOfNodes) {\r\n      window.alert(\"One of nodes doesn't exist\")\r\n    } else if (\r\n      !(findNode1 && findNode2)\r\n    ) {\r\n      window.alert('One of the nodes doesn\"t exist. Add the node before modifying link')\r\n    } else {\r\n      let modify = Object.assign({}, graph)\r\n      setModified(true)\r\n      let linksToCheck = [...graph.links]\r\n      let linksSimple = []\r\n      linksToCheck.forEach((li) => {\r\n        linksSimple.push({ source: li.source.id ? li.source.id : li.source, target: li.target.id ? li.target.id : li.target })\r\n      })\r\n      let linkExists = linksSimple.find((li) => (\r\n        (li.source === parseInt(node1) && li.target === parseInt(node2)) ||\r\n        (li.source === parseInt(node2) && li.target === parseInt(node1))\r\n      ))\r\n      let updatedLinks = [...linksSimple]\r\n      if (!!linkExists) {\r\n        updatedLinks = linksSimple.filter((li) => !(\r\n          (li.source === parseInt(node1) && li.target === parseInt(node2)) ||\r\n          (li.source === parseInt(node2) && li.target === parseInt(node1))\r\n        ))\r\n      } else {\r\n        updatedLinks.push({ source: parseInt(node1), target: parseInt(node2) })\r\n      }\r\n      let nodesToCheck = [...graph.nodes]\r\n      let updatedNodes = []\r\n      nodesToCheck.forEach((no) => {\r\n        updatedNodes.push({ id: no.id })\r\n      })\r\n      modify.nodes = updatedNodes\r\n      modify.links = updatedLinks\r\n      console.log(\"modified graph\", modify);\r\n      setGraph(modify)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"graph after link modification\", graph);\r\n  }, [graph])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"graph\">\r\n        <ForceGraph graph={graph} />\r\n      </div>\r\n      <SidebarMenu\r\n        graphFile={graphFile}\r\n        grGraphFile={grGraphFile}\r\n        arffGraphFile={arffGraphFile}\r\n        handleFileUpload={handleFileUpload}\r\n        handleGrFileUpload={handleGrFileUpload}\r\n        handleArffFileUpload={handleArffFileUpload}\r\n        handleCsvDownload={handleCsvDownload}\r\n        handleOutFileDownload={handleOutFileDownload}\r\n        modified={modified}\r\n        setModified={() => setModified(true)}\r\n        addNode={() => addNode()}\r\n        removeNode={removeNode}\r\n        modifyLink={modifyLink}\r\n        reset={() => reset()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const linkInitialMatrix = (file) => {\r\n    var textByLine = file.split(\"\\n\");\r\n    var numberOfNodes = 0\r\n    var pairsArray = []\r\n    textByLine.forEach((row) => {\r\n        var arrayOfLine = row.split(\" \");\r\n        pairsArray.push(arrayOfLine)\r\n    });\r\n\r\n    pairsArray.forEach((pair) => {\r\n        var biggest = 0\r\n        var node1 = parseInt(pair[0])\r\n        var node2 = parseInt(pair[1])\r\n        if (node1 > node2) {\r\n            biggest = node1\r\n        } else {\r\n            biggest = node2\r\n        }\r\n        if (biggest > numberOfNodes) {\r\n            numberOfNodes = biggest\r\n        }\r\n    })\r\n    console.log(\"Number of nodes\", numberOfNodes);\r\n\r\n    var matrix = []\r\n    for (let i = 0; i < numberOfNodes; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < numberOfNodes; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    pairsArray.forEach((pair) => {\r\n        let from = pair[0];\r\n        let to = pair[1];\r\n        matrix[parseInt(from) - 1][parseInt(to) - 1] = 1;\r\n        matrix[parseInt(to) - 1][parseInt(from) - 1] = 1;\r\n    })\r\n\r\n    console.log(\"empty matrix\", matrix);\r\n\r\n    return {\r\n        initialMatrix: matrix,\r\n        numberOfNodes: numberOfNodes,\r\n    }\r\n}\r\n\r\nexport const initialMatrix = (grFile) => {\r\n    var textByLine = grFile.split(\"\\n\");\r\n    textByLine = textByLine.filter((line) => line !== \"\");\r\n\r\n    var dataObj = {\r\n        nodesD: 0,\r\n        linksD: 0,\r\n        linkedNodes: [],\r\n    };\r\n\r\n    textByLine.forEach((row) => {\r\n        var arrayOfLine = row.split(\" \");\r\n        if (arrayOfLine[0] === \"p\") {\r\n            dataObj.nodesD = arrayOfLine[2];\r\n            dataObj.linksD = arrayOfLine[3];\r\n        }\r\n    });\r\n\r\n    console.log(dataObj.nodesD, dataObj.linksD);\r\n    var matrix = [];\r\n\r\n    for (let i = 0; i < dataObj.nodesD; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < dataObj.nodesD; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    textByLine.forEach((line) => {\r\n        var arrayOfLine = line.split(\" \");\r\n        if (arrayOfLine[0] !== \"p\") {\r\n            let from = arrayOfLine[0];\r\n            let to = arrayOfLine[1];\r\n            matrix[parseInt(from) - 1][parseInt(to) - 1] = 1;\r\n            matrix[parseInt(to) - 1][parseInt(from) - 1] = 1;\r\n        }\r\n    });\r\n\r\n    textByLine.forEach((line) => {\r\n        var arrayOfLine = line.split(\" \");\r\n        if (arrayOfLine[0] !== \"p\") {\r\n            let from = arrayOfLine[0];\r\n            let to = arrayOfLine[1];\r\n            dataObj.linkedNodes.push(from);\r\n            dataObj.linkedNodes.push(to);\r\n        }\r\n    });\r\n\r\n    var csv = \"Node\";\r\n    for (let i = 0; i < dataObj.nodesD; i++) {\r\n        csv += `, ${i + 1}`;\r\n    }\r\n\r\n    matrix.forEach((row, i) => {\r\n        csv += `\\n ${i + 1}`;\r\n        row.forEach((el) => {\r\n            csv += `, ${el}`;\r\n        });\r\n    });\r\n\r\n    return {\r\n        initialMatrix: matrix,\r\n        numberOfNodes: dataObj.nodesD,\r\n        csv: csv\r\n    }\r\n}\r\n\r\nexport const finalMatrix = (arffFile, numberOfNodes) => {\r\n    var textByLine = arffFile.split(\"\\n\");\r\n    textByLine = textByLine.filter((line) => line !== \"\");\r\n    textByLine = textByLine.filter((line) => line.split(\"\")[0] !== \"@\");\r\n    textByLine = textByLine.map((line) => line.split(\",\"));\r\n\r\n    let lastIndex = parseInt(numberOfNodes) + 2;\r\n\r\n    var pairsArray = [];\r\n    textByLine.forEach((row) => {\r\n        var nodeOnCluster = {\r\n            node: row[1],\r\n            cluster: row[lastIndex],\r\n        };\r\n\r\n        pairsArray.push(nodeOnCluster);\r\n    });\r\n\r\n    var finLinks = [];\r\n    pairsArray.forEach((pairOne, indexOne) => {\r\n        pairsArray.forEach((pairTwo, indexTwo) => {\r\n            if (indexOne < indexTwo && pairOne.cluster === pairTwo.cluster) {\r\n                finLinks.push({\r\n                    x: pairOne.node,\r\n                    y: pairTwo.node,\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    var matrix = [];\r\n\r\n    for (let i = 0; i < numberOfNodes; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < numberOfNodes; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    finLinks.forEach((linkObj) => {\r\n        matrix[parseInt(linkObj.x) - 1][parseInt(linkObj.y) - 1] = 1;\r\n        matrix[parseInt(linkObj.y) - 1][parseInt(linkObj.x) - 1] = 1;\r\n    });\r\n\r\n    return {\r\n        finalMatrix: matrix\r\n    }\r\n}\r\n\r\nexport const differenceMatrix = (initialMatrix, finalMatrix, numberOfNodes) => {\r\n    var matrix = [];\r\n\r\n    for (let i = 0; i < numberOfNodes; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < numberOfNodes; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    for (let z = 0; z < numberOfNodes; z++) {\r\n        for (let x = 0; x < numberOfNodes; x++) {\r\n            if (initialMatrix[z][x] !== finalMatrix[z][x]) {\r\n                matrix[z][x] = 1;\r\n            }\r\n        }\r\n    }\r\n    console.log(\"difference matrix\", matrix);\r\n\r\n    var out = \"\";\r\n    for (let c = 0; c < numberOfNodes; c++) {\r\n        for (let v = 0; v < numberOfNodes; v++) {\r\n            if (c < v && matrix[c][v] === 1) {\r\n                if (out.length === 0) {\r\n                    out += `${c + 1} ${v + 1}`;\r\n                } else {\r\n                    out += `\\n${c + 1} ${v + 1}`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        differenceMatrix: matrix,\r\n        outFile: out\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}