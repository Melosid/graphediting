{"version":3,"sources":["components/d3Components/forceGraph.module.css","icons/redoIcon.svg","icons/upload-thick.svg","icons/plusSquare.svg","icons/downMenu.svg","icons/addNode.svg","icons/links.svg","icons/modify.svg","icons/removeNode.svg","icons/csvFile.svg","icons/outputFile.svg","components/sidebarMenu.js","components/d3Components/forceGraph.js","components/d3Components/forceGraphGenerator.js","components/d3Components/updateForceGraph.js","data/data.js","components/d3Components/graphGenerator.js","components/downloadFile.js","App.js","components/matrixGenerators.js","reportWebVitals.js","index.js"],"names":["module","exports","SidebarMenu","props","fileSectionRef","useRef","fileSectionMenuIconRef","graphSectionRef","graphSectionMenuIconRef","downloadSectionRef","downloadSectionMenuIconRef","removeNodeInput","useState","nodeToRemove","setNodeToRemove","node1Ref","node2Ref","node1","setNode1","node2","setNode2","handleModifyLink","console","log","current","value","className","onClick","reset","src","redo","classList","toggle","ref","downMenu","grGraphFile","document","getElementById","click","uploadIcon","id","type","onChange","handleGrFileUpload","arffGraphFile","modified","window","alert","plusSquare","handleArffFileUpload","addNode","links","placeholder","modify","modifyLink","removeNode","handleCsvDownload","csvDoc","handleOutFileDownload","outputDoc","ForceGraph","graph","containerRef","simulation","setSimulation","svg","setSvg","node","setNode","link","setLink","label","setLabel","color","firstRender","setFirstRender","drag","d3","on","event","d","active","alphaTarget","restart","fx","x","fy","y","useEffect","destroyFn","all","container","containerRect","getBoundingClientRect","height","width","nodes","force","strength","append","attr","call","transform","selectAll","data","join","Math","sqrt","enter","text","source","target","destroy","stop","runForceGraph","updated","old","Map","map","Object","assign","get","alpha","update","styles","firstMatrix","graphGenerator","matrix","nodesOnGraph","forEach","row","i","includes","push","from","to","j","downloadFile","name","file","extention","element","createElement","setAttribute","encodeURIComponent","newName","substr","length","style","display","body","appendChild","removeChild","App","reader","FileReader","setGrGraphFile","setArffGraphFile","setGraph","numberOfNodes","setNumberOfNodes","initMatrix","setInitMatrix","csvFile","setCsvFile","finMatrix","setFinMatrix","diffMatrix","setDiffMatrix","outputFile","setOutputFile","setModified","diffMat","initialMatrix","finalMatrix","z","out","c","v","differenceMatrix","outFile","ev","readAsText","files","onload","result","initialMat","grFile","textByLine","split","filter","line","dataObj","nodesD","linksD","linkedNodes","arrayOfLine","parseInt","csv","el","finMat","arffFile","lastIndex","pairsArray","nodeOnCluster","cluster","finLinks","pairOne","indexOne","pairTwo","indexTwo","linkObj","updatedNodes","no","updatedLinks","li","currentNodes","findNode1","find","findNode2","linksToCheck","linksSimple","linkExists","nodesToCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78f097c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forceGraph_container__1gzsd\",\"male\":\"forceGraph_male__3ebJ9\",\"female\":\"forceGraph_female__2zQIC\",\"node\":\"forceGraph_node__1xPTl\",\"tooltip\":\"forceGraph_tooltip__bZJe3\",\"contextMenu\":\"forceGraph_contextMenu__17mUO\",\"menuEntry\":\"forceGraph_menuEntry__3hChz\"};","export default __webpack_public_path__ + \"static/media/redoIcon.ba597351.svg\";","export default __webpack_public_path__ + \"static/media/upload-thick.2b0d678b.svg\";","export default __webpack_public_path__ + \"static/media/plusSquare.4903a1f7.svg\";","export default __webpack_public_path__ + \"static/media/downMenu.a7a8095f.svg\";","export default __webpack_public_path__ + \"static/media/addNode.32ab0af6.svg\";","export default __webpack_public_path__ + \"static/media/links.d361ac9c.svg\";","export default __webpack_public_path__ + \"static/media/modify.c1b1d5f5.svg\";","export default __webpack_public_path__ + \"static/media/removeNode.6f2e8054.svg\";","export default __webpack_public_path__ + \"static/media/csvFile.6ebd3c15.svg\";","export default __webpack_public_path__ + \"static/media/outputFile.81bbffdd.svg\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport '../App.css'\r\nimport redo from '../icons/redoIcon.svg'\r\nimport uploadIcon from '../icons/upload-thick.svg'\r\nimport plusSquare from '../icons/plusSquare.svg'\r\nimport downMenu from '../icons/downMenu.svg'\r\nimport addNode from '../icons/addNode.svg'\r\nimport links from '../icons/links.svg'\r\nimport modify from '../icons/modify.svg'\r\nimport removeNode from '../icons/removeNode.svg'\r\nimport csvDoc from '../icons/csvFile.svg'\r\nimport outputDoc from '../icons/outputFile.svg'\r\n\r\nexport const SidebarMenu = (props) => {\r\n    const fileSectionRef = useRef()\r\n    const fileSectionMenuIconRef = useRef()\r\n    const graphSectionRef = useRef()\r\n    const graphSectionMenuIconRef = useRef()\r\n    const downloadSectionRef = useRef()\r\n    const downloadSectionMenuIconRef = useRef()\r\n    const removeNodeInput = useRef()\r\n    const [nodeToRemove, setNodeToRemove] = useState(1)\r\n    const node1Ref = useRef()\r\n    const node2Ref = useRef()\r\n    const [node1, setNode1] = useState(2)\r\n    const [node2, setNode2] = useState(3)\r\n\r\n    const handleRemoveNode = () => {\r\n        setNodeToRemove(removeNodeInput.current.value)\r\n        console.log(\"Node to remove value\", removeNodeInput.current.value);\r\n    }\r\n\r\n    const handleModifyLink = () => {\r\n        console.log(node1Ref.current.value + \" \" + node2Ref.current.value);\r\n        setNode1(node1Ref.current.value)\r\n        setNode2(node2Ref.current.value)\r\n    }\r\n\r\n    const uploadGrGraphFile = () => {\r\n        document.getElementById(\"grUpload\").click()\r\n    }\r\n\r\n    const uploadArffGraphFile = () => {\r\n        if (props.grGraphFile && !props.modified) {\r\n            document.getElementById(\"arffUpload\").click()\r\n        } else if (props.modified) {\r\n            window.alert('Can not upload an arff file because the graph has been manually modified')\r\n        }\r\n        else {\r\n            window.alert('No .gr graph file found. Please upload a graph before proceeding.')\r\n        }\r\n    }\r\n\r\n    const toggleFileSection = () => {\r\n        const section = fileSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = fileSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    const toggleGraphSection = () => {\r\n        const section = graphSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = graphSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    const toggleDownloadSection = () => {\r\n        const section = downloadSectionRef.current\r\n        section.classList.toggle('closed')\r\n        const icon = downloadSectionMenuIconRef.current\r\n        icon.classList.toggle('rotate')\r\n    }\r\n\r\n    return (<div className=\"options\">\r\n        <span className=\"header\">Graph Editing</span>\r\n        <span className=\"description\">Add a graph to edit and visualize</span>\r\n        <div className=\"reset\" onClick={props.reset}>\r\n            <img className=\"resetIcon\" src={redo} />\r\n            <span className=\"resetText\">Reset options</span>\r\n        </div>\r\n        <div className=\"sections\">\r\n            <div className=\"sectionToggle\" onClick={toggleFileSection}>\r\n                <span className=\"sectionTitle\">File options</span>\r\n                <img ref={fileSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n            </div>\r\n            <div ref={fileSectionRef} className=\"fileSection\">\r\n                <div className={props.grGraphFile ? 'uploadGr green' : 'uploadGr'} onClick={uploadGrGraphFile}>\r\n                    <img className=\"uploadIcon\" src={uploadIcon} />\r\n                    <span className=\"uploadspan\">Upload a .gr graph file</span>\r\n                    <input\r\n                        id=\"grUpload\"\r\n                        type=\"file\"\r\n                        onChange={props.handleGrFileUpload}\r\n                        className=\"noDisplay\"\r\n                    />\r\n                </div>\r\n                <div className={props.arffGraphFile ? 'addArff green' : 'addArff'} onClick={uploadArffGraphFile}>\r\n                    <img className=\"plusIcon\" src={plusSquare} />\r\n                    <span className=\"uploadspan\">Add .arff file to graph</span>\r\n                    <input\r\n                        id=\"arffUpload\"\r\n                        type=\"file\"\r\n                        onChange={props.handleArffFileUpload}\r\n                        className=\"noDisplay\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"sectionToggle\" onClick={toggleGraphSection}>\r\n                <span className=\"sectionTitle\">Graph options</span>\r\n                <img ref={graphSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n            </div>\r\n            <div ref={graphSectionRef} className=\"fileSection\">\r\n                <div className=\"addArff\" onClick={props.addNode}>\r\n                    <img className=\"plusIcon\" src={addNode} />\r\n                    <span className=\"uploadspan\">Add node</span>\r\n                </div>\r\n                <div className=\"modifyLink\">\r\n                    <div>\r\n                        <img className=\"plusIcon\" src={links} />\r\n                        <span className=\"uploadspan\">Modify links</span>\r\n                    </div>\r\n                    <span className=\"nodespan\">Start:</span>\r\n                    <input ref={node1Ref} className=\"nodeInput\" placeholder=\"1\" onChange={handleModifyLink} />\r\n                    <img className=\"modifyIcon\" src={modify} />\r\n                    <span className=\"nodespan2\">End:</span>\r\n                    <input ref={node2Ref} className=\"nodeInput\" placeholder=\"2\" onChange={handleModifyLink} />\r\n                    <span className=\"modifyLinkButton\" onClick={() => props.modifyLink(node1, node2)}>Modify</span>\r\n                </div>\r\n                <div className=\"modifyLink\">\r\n                    <div className=\"removeNodeTitle\">\r\n                        <img className=\"plusIcon\" src={removeNode} />\r\n                        <span className=\"uploadspan\">Remove node</span>\r\n                    </div>\r\n                    <span className=\"nodespan\">Node:</span>\r\n                    <input ref={removeNodeInput} className=\"nodeInput\" placeholder=\"1\" onChange={handleRemoveNode} />\r\n                    <span className=\"removeNodeButton\" onClick={() => props.removeNode(nodeToRemove)}>Remove</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"sectionToggle\" onClick={toggleDownloadSection}>\r\n                <span className=\"sectionTitle\">Download</span>\r\n                <img ref={downloadSectionMenuIconRef} className=\"menuIcon\" src={downMenu} />\r\n            </div>\r\n            <div ref={downloadSectionRef} className=\"fileSection\">\r\n                <div className={props.grGraphFile ? 'uploadGr green' : 'uploadGr'} onClick={props.handleCsvDownload}>\r\n                    <img className=\"uploadIcon\" src={csvDoc} />\r\n                    <span className=\"uploadspan\">Download CSV file</span>\r\n                </div>\r\n                <div className={props.arffGraphFile ? 'addArff green' : 'addArff'} onClick={props.handleOutFileDownload}>\r\n                    <img className=\"plusIcon\" src={outputDoc} />\r\n                    <span className=\"uploadspan\">Download Output file</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n\r\n}","import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { runForceGraph } from \"./forceGraphGenerator\";\r\nimport { update } from \"./updateForceGraph\"\r\nimport styles from \"./forceGraph.module.css\";\r\n\r\nexport function ForceGraph({ graph }) {\r\n    const containerRef = useRef(null)\r\n    const [simulation, setSimulation] = useState()\r\n    const [svg, setSvg] = useState()\r\n    const [node, setNode] = useState()\r\n    const [link, setLink] = useState()\r\n    const [label, setLabel] = useState()\r\n    const color = () => {\r\n        return \"#9D00A0\"\r\n    }\r\n    const [firstRender, setFirstRender] = useState(true)\r\n\r\n    const drag = (simulation) => {\r\n        const dragstarted = (event, d) => {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            d.fx = d.x;\r\n            d.fy = d.y;\r\n        };\r\n\r\n        const dragged = (event, d) => {\r\n            d.fx = event.x;\r\n            d.fy = event.y;\r\n        };\r\n\r\n        const dragended = (event, d) => {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            d.fx = null;\r\n            d.fy = null;\r\n        };\r\n\r\n        return d3\r\n            .drag()\r\n            .on(\"start\", dragstarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragended);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let destroyFn;\r\n        console.log('Grafi', graph);\r\n        if (containerRef.current && firstRender) {\r\n            console.log('From inside');\r\n            const all = runForceGraph(containerRef.current, graph, simulation, node, link, label, color, svg, drag);\r\n            destroyFn = all.destroy;\r\n            setSvg(all.svg)\r\n            setNode(all.node)\r\n            setLink(all.link)\r\n            setLabel(all.label)\r\n            setSimulation(all.simulation)\r\n            setFirstRender(false)\r\n        } else {\r\n            const updated = update(graph, simulation, node, link, label, color, svg, drag)\r\n            destroyFn = updated.destroy;\r\n            setSvg(updated.svg)\r\n            setNode(updated.node)\r\n            setLink(updated.link)\r\n            setLabel(updated.label)\r\n            setSimulation(updated.simulation)\r\n        }\r\n        return destroyFn;\r\n    }, [graph]);\r\n\r\n    return <div ref={containerRef} className={styles.container} />;\r\n}","import * as d3 from \"d3\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nexport function runForceGraph(container, graph, simulation, node, link, label, color, svg, drag) {\r\n    const containerRect = container.getBoundingClientRect();\r\n    const height = containerRect.height;\r\n    const width = containerRect.width;\r\n\r\n    simulation = d3\r\n        .forceSimulation(graph.nodes)\r\n        .force(\r\n            \"link\",\r\n            d3.forceLink(graph.links).id((d) => d.id)\r\n        )\r\n        .force(\"charge\", d3.forceManyBody().strength(-150))\r\n        .force(\"x\", d3.forceX())\r\n        .force(\"y\", d3.forceY());\r\n\r\n    svg = d3\r\n        .select(container)\r\n        .append(\"svg\")\r\n        .attr(\"id\", \"graphSvg\")\r\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n        .call(\r\n            d3.zoom().on(\"zoom\", function (event) {\r\n                svg.attr(\"transform\", event.transform);\r\n            })\r\n        );\r\n\r\n    link = svg\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#999\")\r\n        .attr(\"stroke-opacity\", 0.6)\r\n        .selectAll(\"line\")\r\n        .data(graph.links)\r\n        .join(\"line\")\r\n        .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\r\n\r\n    node = svg\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#fff\")\r\n        .attr(\"stroke-width\", 2)\r\n        .selectAll(\"circle\")\r\n        .data(graph.nodes)\r\n        .join(\"circle\")\r\n        .attr(\"r\", 12)\r\n        .attr(\"fill\", color)\r\n        .call(drag(simulation))\r\n        .on(\"click\", (d) => console.log(\"Node clicked\", d));\r\n\r\n    label = svg.append(\"g\")\r\n        .attr(\"class\", \"labels\")\r\n        .selectAll(\"text\")\r\n        .data(graph.nodes)\r\n        .enter()\r\n        .append(\"text\")\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dominant-baseline', 'central')\r\n        .text(d => { return d.id; })\r\n        .call(drag(simulation));\r\n\r\n    simulation.on(\"tick\", () => {\r\n        //update link positions\r\n        link\r\n            .attr(\"x1\", (d) => d.source.x)\r\n            .attr(\"y1\", (d) => d.source.y)\r\n            .attr(\"x2\", (d) => d.target.x)\r\n            .attr(\"y2\", (d) => d.target.y);\r\n\r\n        // update node positions\r\n        node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n\r\n        // update label positions\r\n        label\r\n            .attr(\"x\", d => { return d.x; })\r\n            .attr(\"y\", d => { return d.y; })\r\n    });\r\n\r\n    return {\r\n        destroy: () => {\r\n            simulation.stop();\r\n        },\r\n        nodes: () => {\r\n            return svg.node();\r\n        },\r\n        svg: svg,\r\n        node: node,\r\n        link: link,\r\n        label: label,\r\n        simulation: simulation\r\n    };\r\n}\r\n","export function update({ nodes, links }, simulation, node, link, label, color, svg, drag) {\r\n    // Make a shallow copy to protect against mutation, while\r\n    // recycling old nodes to preserve position and velocity.\r\n    const old = new Map(node.data().map((d) => [d.id, d]));\r\n    console.log('old', old);\r\n    console.log('svg', svg);\r\n    nodes = nodes.map((d) => Object.assign(old.get(d.id) || {}, d));\r\n    links = links.map((d) => Object.assign({}, d));\r\n\r\n    console.log('updated nodes', nodes);\r\n    console.log('updated links', links)\r\n\r\n    node = node\r\n        .data(nodes, (d) => d.id)\r\n        .join((enter) =>\r\n            enter.append(\"circle\").attr(\"r\", 12).attr(\"fill\", color)\r\n        ).call(drag(simulation))\r\n\r\n    link = link.data(links, (d) => [d.source, d.target]).join(\"line\");\r\n\r\n    label = label.data(nodes, (d) => d.id)\r\n        .join((enter) =>\r\n            enter.append(\"text\")\r\n                .attr('text-anchor', 'middle')\r\n                .attr('dominant-baseline', 'central')\r\n                .text(d => { return d.id; }),\r\n        ).call(drag(simulation))\r\n\r\n    simulation.nodes(nodes);\r\n    simulation.force(\"link\").links(links);\r\n    simulation.alpha(1).restart();\r\n\r\n    simulation.on(\"tick\", () => {\r\n        //update link positions\r\n        link\r\n            .attr(\"x1\", (d) => d.source.x)\r\n            .attr(\"y1\", (d) => d.source.y)\r\n            .attr(\"x2\", (d) => d.target.x)\r\n            .attr(\"y2\", (d) => d.target.y);\r\n\r\n        // update node positions\r\n        node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n\r\n        // update label positions\r\n        label\r\n            .attr(\"x\", d => { return d.x; })\r\n            .attr(\"y\", d => { return d.y; })\r\n    });\r\n    return {\r\n        destroy: () => {\r\n            simulation.stop();\r\n        },\r\n        nodes: () => {\r\n            return svg.node();\r\n        },\r\n        node: node,\r\n        link: link,\r\n        label: label,\r\n        simulation: simulation\r\n    };\r\n}","export const firstMatrix = [[0, 1, 1], [1, 0, 0], [1, 0, 0]]","export const graphGenerator = (matrix) => {\r\n    let nodesOnGraph = []\r\n    let graph = {}\r\n    let nodes = []\r\n    let links = []\r\n    matrix.forEach((row, i) => {\r\n        if (row.includes(1)) {\r\n            nodesOnGraph.push(i + 1)\r\n        }\r\n    });\r\n\r\n    nodesOnGraph.forEach((node) => {\r\n        nodes.push({ id: node })\r\n    })\r\n    graph.nodes = nodes\r\n\r\n    matrix.forEach((from, i) => {\r\n        from.forEach((to, j) => {\r\n            if (i < j && matrix[i][j] === 1) {\r\n                links.push({ source: i + 1, target: j + 1 })\r\n            }\r\n        })\r\n    })\r\n    graph.links = links\r\n    console.log(\"Graph\", graph);\r\n    return graph\r\n}\r\n\r\n","export const downloadFile = (name, file, extention) => {\r\n    var element = document.createElement(\"a\");\r\n    element.setAttribute(\r\n        \"href\",\r\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(file)\r\n    );\r\n    var newName = name.substr(0, name.length - 3) + extention;\r\n    element.setAttribute(\"download\", newName);\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\nimport { SidebarMenu } from './components/sidebarMenu'\r\nimport { ForceGraph } from './components/d3Components/forceGraph'\r\nimport { firstMatrix } from \"./data/data\";\r\nimport { initialMatrix, finalMatrix, differenceMatrix } from './components/matrixGenerators'\r\nimport { graphGenerator } from './components/d3Components/graphGenerator'\r\nimport { downloadFile } from './components/downloadFile'\r\n\r\nconst App = () => {\r\n  const reader = new FileReader();\r\n\r\n  const [grGraphFile, setGrGraphFile] = useState()\r\n  const handleGrFileUpload = (ev) => {\r\n    reader.readAsText(ev.target.files[0], \"utf-8\");\r\n    reader.onload = (event) => {\r\n      setGrGraphFile(event.target.result);\r\n      let initialMat = initialMatrix(event.target.result)\r\n      setNumberOfNodes(parseInt(initialMat.numberOfNodes))\r\n      setInitMatrix(initialMat.initialMatrix)\r\n      let graph = graphGenerator(initialMat.initialMatrix)\r\n      setGraph(graph)\r\n      setCsvFile(initialMat.csv)\r\n    };\r\n    let input = document.getElementById('grUpload')\r\n    input.value = ''\r\n  };\r\n\r\n  const [arffGraphFile, setArffGraphFile] = useState()\r\n  const handleArffFileUpload = (ev) => {\r\n    reader.readAsText(ev.target.files[0], \"utf-8\");\r\n    reader.onload = (event) => {\r\n      setArffGraphFile(event.target.result);\r\n      let finMat = finalMatrix(event.target.result, numberOfNodes)\r\n      setFinMatrix(finMat.finalMatrix)\r\n      let graph = graphGenerator(finMat.finalMatrix)\r\n      setGraph(graph)\r\n    };\r\n    let input = document.getElementById('arffUpload')\r\n    input.value = ''\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    if (csvFile) {\r\n      downloadFile(\"Graph\", csvFile, \"toCSV.csv\");\r\n    } else {\r\n      window.alert('No .gr graph file found. Please upload a graph before proceeding.')\r\n    }\r\n  };\r\n\r\n  const handleOutFileDownload = () => {\r\n    if (outputFile) {\r\n      downloadFile(\"Graph\", outputFile, \"OutputFormat.txt\");\r\n    } else {\r\n      window.alert('Missing .gr or .arff graph file. Please upload graph files before proceeding.')\r\n    }\r\n  };\r\n\r\n  const [graph, setGraph] = useState(graphGenerator(firstMatrix))\r\n  const [numberOfNodes, setNumberOfNodes] = useState(3)\r\n  const [initMatrix, setInitMatrix] = useState()\r\n  const [csvFile, setCsvFile] = useState()\r\n  const [finMatrix, setFinMatrix] = useState()\r\n  const [diffMatrix, setDiffMatrix] = useState()\r\n  const [outputFile, setOutputFile] = useState()\r\n  const [modified, setModified] = useState()\r\n\r\n  useEffect(() => {\r\n    if (finMatrix) {\r\n      console.log(\"Initial Matrix\", initMatrix);\r\n      console.log(\"CSV\", csvFile);\r\n      console.log(\"Final Matrix\", finMatrix);\r\n      let diffMat = differenceMatrix(initMatrix, finMatrix, numberOfNodes)\r\n      setDiffMatrix(diffMat.differenceMatrix)\r\n      setOutputFile(diffMat.outFile)\r\n    }\r\n  }, [finMatrix])\r\n\r\n  useEffect(() => {\r\n    if (initMatrix && diffMatrix) {\r\n      console.log(\"Difference Matrix\", diffMatrix);\r\n      console.log(\"Out file\", outputFile);\r\n    }\r\n  }, [diffMatrix])\r\n\r\n  useEffect(() => {\r\n    console.log(\"Modified\", modified);\r\n  }, [modified])\r\n\r\n  const reset = () => {\r\n    setGrGraphFile(null)\r\n    setArffGraphFile(null)\r\n    setCsvFile(null)\r\n    setOutputFile(null)\r\n    setGraph(graphGenerator(firstMatrix))\r\n    setModified(false)\r\n    setNumberOfNodes(firstMatrix.length)\r\n    console.log(firstMatrix.length);\r\n  }\r\n\r\n  const addNode = () => {\r\n    setModified(true)\r\n    let modify = Object.assign({}, graph)\r\n    console.log(\"Modified Graph\", modify.nodes);\r\n    modify.nodes.push({ id: numberOfNodes + 1 })\r\n    setNumberOfNodes(numberOfNodes + 1)\r\n    setGraph(modify)\r\n  }\r\n\r\n  const removeNode = (node) => {\r\n    if (node > numberOfNodes) {\r\n      window.alert(\"Node doesn't exist\")\r\n    } else {\r\n      let modify = Object.assign({}, graph)\r\n      setModified(true)\r\n      let nodesToCheck = [...graph.nodes]\r\n      let updatedNodes = nodesToCheck.filter((no) => (\r\n        no.id != parseInt(node)\r\n      ))\r\n      console.log(\"updated Nodes\", updatedNodes);\r\n      let linksToCheck = [...graph.links]\r\n      let updatedLinks = linksToCheck.filter((li) => (\r\n        li.source != parseInt(node) && li.target != parseInt(node)\r\n      ))\r\n      console.log(\"Updated Links\", updatedLinks);\r\n      modify.nodes = updatedNodes\r\n      modify.links = updatedLinks\r\n      setGraph(modify)\r\n    }\r\n  }\r\n\r\n  const modifyLink = (node1, node2) => {\r\n    console.log(\"Modified link between nodes\", node1 + \" \" + node2);\r\n    let currentNodes = [...graph.nodes]\r\n    let findNode1 = currentNodes.find((no) => no.id === parseInt(node1))\r\n    let findNode2 = currentNodes.find((no) => no.id === parseInt(node2))\r\n    console.log(\"findNode1\", findNode1);\r\n    console.log(\"findNode2\", findNode2);\r\n    if (node1 > numberOfNodes || node2 > numberOfNodes) {\r\n      window.alert(\"One of nodes doesn't exist\")\r\n    } else if (\r\n      !(findNode1 && findNode2)\r\n    ) {\r\n      window.alert('One of the nodes doesn\"t exist. Add the node before modifying link')\r\n    } else {\r\n      let modify = Object.assign({}, graph)\r\n      setModified(true)\r\n      let linksToCheck = [...graph.links]\r\n      console.log(graph.links);\r\n      console.log(\"linksToCheck\", linksToCheck);\r\n      let linksSimple = []\r\n      linksToCheck.forEach((li) => {\r\n        linksSimple.push({ source: li.source.id ? li.source.id : li.source, target: li.target.id ? li.target.id : li.target })\r\n      })\r\n      console.log(\"linksSimple\", linksSimple);\r\n      let linkExists = linksSimple.find((li) => (\r\n        (li.source === parseInt(node1) && li.target === parseInt(node2)) ||\r\n        (li.source === parseInt(node2) && li.target === parseInt(node1))\r\n      ))\r\n      let updatedLinks = [...linksSimple]\r\n      if (!!linkExists) {\r\n        console.log('Links already exists');\r\n        updatedLinks = linksSimple.filter((li) => !(\r\n          (li.source === parseInt(node1) && li.target === parseInt(node2)) ||\r\n          (li.source === parseInt(node2) && li.target === parseInt(node1))\r\n        ))\r\n      } else {\r\n        console.log('link doesn\"t exist');\r\n        updatedLinks.push({ source: parseInt(node1), target: parseInt(node2) })\r\n      }\r\n      console.log(\"Updated Links\", updatedLinks);\r\n      let nodesToCheck = [...graph.nodes]\r\n      let updatedNodes = []\r\n      nodesToCheck.forEach((no) => {\r\n        updatedNodes.push({ id: no.id })\r\n      })\r\n      console.log(\"updated Nodes\", updatedNodes);\r\n      modify.nodes = updatedNodes\r\n      modify.links = updatedLinks\r\n      console.log(\"modified graph\", modify);\r\n      setGraph(modify)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"graph after link modification\", graph);\r\n  }, [graph])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"graph\">\r\n        <ForceGraph graph={graph} />\r\n      </div>\r\n      <SidebarMenu\r\n        grGraphFile={grGraphFile}\r\n        arffGraphFile={arffGraphFile}\r\n        handleGrFileUpload={handleGrFileUpload}\r\n        handleArffFileUpload={handleArffFileUpload}\r\n        handleCsvDownload={handleCsvDownload}\r\n        handleOutFileDownload={handleOutFileDownload}\r\n        modified={modified}\r\n        setModified={() => setModified(true)}\r\n        addNode={() => addNode()}\r\n        removeNode={removeNode}\r\n        modifyLink={modifyLink}\r\n        reset={() => reset()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const initialMatrix = (grFile) => {\r\n    var textByLine = grFile.split(\"\\n\");\r\n    textByLine = textByLine.filter((line) => line !== \"\");\r\n\r\n    var dataObj = {\r\n        nodesD: 0,\r\n        linksD: 0,\r\n        linkedNodes: [],\r\n    };\r\n\r\n    textByLine.forEach((row) => {\r\n        var arrayOfLine = row.split(\" \");\r\n        if (arrayOfLine[0] === \"p\") {\r\n            dataObj.nodesD = arrayOfLine[2];\r\n            dataObj.linksD = arrayOfLine[3];\r\n        }\r\n    });\r\n\r\n    console.log(dataObj.nodesD, dataObj.linksD);\r\n    var matrix = [];\r\n\r\n    for (let i = 0; i < dataObj.nodesD; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < dataObj.nodesD; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    textByLine.forEach((line) => {\r\n        var arrayOfLine = line.split(\" \");\r\n        if (arrayOfLine[0] !== \"p\") {\r\n            let from = arrayOfLine[0];\r\n            let to = arrayOfLine[1];\r\n            matrix[parseInt(from) - 1][parseInt(to) - 1] = 1;\r\n            matrix[parseInt(to) - 1][parseInt(from) - 1] = 1;\r\n        }\r\n    });\r\n\r\n    textByLine.forEach((line) => {\r\n        var arrayOfLine = line.split(\" \");\r\n        if (arrayOfLine[0] !== \"p\") {\r\n            let from = arrayOfLine[0];\r\n            let to = arrayOfLine[1];\r\n            dataObj.linkedNodes.push(from);\r\n            dataObj.linkedNodes.push(to);\r\n        }\r\n    });\r\n\r\n    var csv = \"Node\";\r\n    for (let i = 0; i < dataObj.nodesD; i++) {\r\n        csv += `, ${i + 1}`;\r\n    }\r\n\r\n    matrix.forEach((row, i) => {\r\n        csv += `\\n ${i + 1}`;\r\n        row.forEach((el) => {\r\n            csv += `, ${el}`;\r\n        });\r\n    });\r\n\r\n    return {\r\n        initialMatrix: matrix,\r\n        numberOfNodes: dataObj.nodesD,\r\n        csv: csv\r\n    }\r\n}\r\n\r\nexport const finalMatrix = (arffFile, numberOfNodes) => {\r\n    var textByLine = arffFile.split(\"\\n\");\r\n    textByLine = textByLine.filter((line) => line !== \"\");\r\n    textByLine = textByLine.filter((line) => line.split(\"\")[0] !== \"@\");\r\n    textByLine = textByLine.map((line) => line.split(\",\"));\r\n\r\n    let lastIndex = parseInt(numberOfNodes) + 2;\r\n\r\n    var pairsArray = [];\r\n    textByLine.forEach((row) => {\r\n        var nodeOnCluster = {\r\n            node: row[1],\r\n            cluster: row[lastIndex],\r\n        };\r\n\r\n        pairsArray.push(nodeOnCluster);\r\n    });\r\n\r\n    var finLinks = [];\r\n    pairsArray.forEach((pairOne, indexOne) => {\r\n        pairsArray.forEach((pairTwo, indexTwo) => {\r\n            if (indexOne < indexTwo && pairOne.cluster === pairTwo.cluster) {\r\n                finLinks.push({\r\n                    x: pairOne.node,\r\n                    y: pairTwo.node,\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    var matrix = [];\r\n\r\n    for (let i = 0; i < numberOfNodes; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < numberOfNodes; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    finLinks.forEach((linkObj) => {\r\n        matrix[parseInt(linkObj.x) - 1][parseInt(linkObj.y) - 1] = 1;\r\n        matrix[parseInt(linkObj.y) - 1][parseInt(linkObj.x) - 1] = 1;\r\n    });\r\n\r\n    return {\r\n        finalMatrix: matrix\r\n    }\r\n}\r\n\r\nexport const differenceMatrix = (initialMatrix, finalMatrix, numberOfNodes) => {\r\n    var matrix = [];\r\n\r\n    for (let i = 0; i < numberOfNodes; i++) {\r\n        matrix.push([]);\r\n    }\r\n    matrix.forEach((row) => {\r\n        for (let i = 0; i < numberOfNodes; i++) {\r\n            row.push(0);\r\n        }\r\n    });\r\n\r\n    for (let z = 0; z < numberOfNodes; z++) {\r\n        for (let x = 0; x < numberOfNodes; x++) {\r\n            if (initialMatrix[z][x] !== finalMatrix[z][x]) {\r\n                matrix[z][x] = 1;\r\n            }\r\n        }\r\n    }\r\n    console.log(\"difference matrix\", matrix);\r\n\r\n    var out = \"\";\r\n    for (let c = 0; c < numberOfNodes; c++) {\r\n        for (let v = 0; v < numberOfNodes; v++) {\r\n            if (c < v && matrix[c][v] === 1) {\r\n                if (out.length === 0) {\r\n                    out += `${c + 1} ${v + 1}`;\r\n                } else {\r\n                    out += `\\n${c + 1} ${v + 1}`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        differenceMatrix: matrix,\r\n        outFile: out\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}